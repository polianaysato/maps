{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\polia\\\\Desktop\\\\Overlay\\\\src\\\\pages\\\\Mapbox.tsx\",\n    _s = $RefreshSig$();\n\n// @ts-nocheck\nimport { useRef, useEffect, useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport ReactDOM from 'react-dom';\nimport { makeStyles } from '@material-ui/core';\nimport clusterBlue from \"../assets/clusterBlue.svg\";\nimport unclusteredPoint from \"../assets/unclusteredPoint.svg\";\nimport \"../styles/App.css\";\nimport Legend from \"../components/Legend\";\nimport { mapboxStyle, states12MilesRadius, states12MilesSteps, states18MilesRadius, states18MilesSteps, states6MilesRadius, states6MilesSteps, statesHeatmapFill, statesHeatmapSteps, statesMapFilter, statesCircleStrokeWidth } from \"../helpers/Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  chartDiv: {\n    height: '25em'\n  }\n}));\nmapboxgl.accessToken = \"pk.eyJ1IjoiZW5nbWFwYm94IiwiYSI6ImNqY3M1ZXA5czM2ZGYzM283ZmhscDltcGMifQ.Za7ut_7UThGzvjWhX4ACJQ\";\nexport const Mapbox = _ref => {\n  _s();\n\n  let {\n    geoJson,\n    poi,\n    Popup\n  } = _ref;\n  const [colorScheme, setColorScheme] = useState([]);\n  const [steps, setSteps] = useState([]);\n  const [poiViews6Miles, setPoiViews6Miles] = useState([]);\n  const [poiColor6Miles, setPoiColor6Miles] = useState([]);\n  const [poiViews12Miles, setPoiViews12Miles] = useState([]);\n  const [poiColor12Miles, setPoiColor12Miles] = useState([]);\n  const [poiViews18Miles, setPoiViews18Miles] = useState([]);\n  const [poiColor18Miles, setPoiColor18Miles] = useState([]);\n  const mapContainer = useRef();\n  const map = useRef();\n  const popUpRef = useRef();\n  const nav = useRef();\n  const geoCoder = useRef();\n  const classes = useStyles();\n  useEffect(() => {\n    setColorScheme(statesHeatmapFill);\n    setSteps(statesHeatmapSteps);\n    setPoiColor6Miles(states6MilesRadius);\n    setPoiViews6Miles(states6MilesSteps);\n    setPoiColor12Miles(states12MilesRadius);\n    setPoiViews12Miles(states12MilesSteps);\n    setPoiColor18Miles(states18MilesRadius);\n    setPoiViews18Miles(states18MilesSteps);\n  }, []);\n  useEffect(() => {\n    //initialize popup just once\n    popUpRef.current = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false\n    });\n  }, []);\n  useEffect(() => {\n    nav.current = new mapboxgl.NavigationControl({\n      showCompass: false,\n      showZoom: true\n    });\n  }, []);\n  useEffect(() => {\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: mapboxStyle,\n      center: [-97, 36],\n      zoom: 3\n    }); // only want to work with the map after it has fully loaded\n    // if you try to add sources and layers before the map has loaded\n    // things will not work properly\n\n    map.current.on(\"load\", () => {\n      map.current.addSource(\"sites\", {\n        type: \"geojson\",\n        data: poi\n      });\n      map.current.addSource(\"states\", {\n        type: \"geojson\",\n        data: geoJson\n      });\n      map.current.addLayer({\n        id: \"hover\",\n        type: \"fill\",\n        source: \"states\",\n        paint: {\n          \"fill-color\": statesMapFilter,\n          \"fill-opacity\": 0.8,\n          \"fill-outline-color\": \"#000\"\n        }\n      });\n      map.current.addLayer({\n        id: \"unclustered-point-1\",\n        type: \"circle\",\n        source: \"sites\",\n        filter: [\"!\", [\"has\", \"point_count\"]],\n        paint: {\n          \"circle-opacity\": 0,\n          'circle-stroke-opacity': 0.5,\n          \"circle-radius\": [\"interpolate\", [\"linear\"], [\"zoom\"], // zoom is 5 (or less) -> circle radius will be 1px\n          5, 5, // zoom is 10 (or greater) -> circle radius will be 5px\n          6, 12, 7, 24, 8, 36],\n          \"circle-stroke-width\": [\"interpolate\", [\"linear\"], [\"zoom\"], // zoom is 5 (or less) -> circle radius will be 1px\n          5, 3, // zoom is 10 (or greater) -> circle radius will be 5px\n          6, 11, 7, 22, 8, 36],\n          \"circle-stroke-color\": statesCircleStrokeWidth\n        }\n      });\n      map.current.addLayer({\n        id: \"unclustered-point\",\n        type: \"circle\",\n        source: \"sites\",\n        filter: [\"!\", [\"has\", \"point_count\"]],\n        paint: {\n          \"circle-color\": poiColor6Miles[0],\n          \"circle-radius\": [\"interpolate\", [\"linear\"], [\"zoom\"], // zoom is 5 (or less) -> circle radius will be 1px\n          5, 3, // zoom is 10 (or greater) -> circle radius will be 5px\n          6, 20],\n          \"circle-stroke-width\": [\"interpolate\", [\"linear\"], [\"zoom\"], // zoom is 5 (or less) -> circle radius will be 1px\n          5, 1, // zoom is 10 (or greater) -> circle radius will be 5px\n          6, 8],\n          \"circle-stroke-color\": [\"case\", // Begin case expression\n          [\"<\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[0]], poiColor12Miles[0], [\"all\", [\">=\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[0]], [\"<\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[1]]], poiColor12Miles[1], [\"all\", [\">=\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[1]], [\"<\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[2]]], poiColor12Miles[2], [\"all\", [\">=\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[2]], [\"<\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[3]]], poiColor12Miles[3], [\"all\", [\">=\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[3]], [\"<\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[4]]], poiColor12Miles[4], [\">=\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[4]], poiColor12Miles[5], \"#00c3a2\"]\n        }\n      });\n      map.current.on(\"click\", \"unclustered-point\", e => {\n        let f = map.current.queryRenderedFeatures(e.point, {\n          layers: ['unclustered-point-1']\n        });\n\n        if (f.length) {\n          map.current.getCanvas().style.cursor = 'pointer';\n          let popupNode = document.createElement('div');\n\n          if (Popup) {\n            let elem = /*#__PURE__*/_jsxDEV(Popup, {\n              data: f[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 28\n            }, this);\n\n            ReactDOM.render(elem, popupNode);\n            popUpRef.current.setLngLat(e.lngLat).setDOMContent(popupNode).addTo(map.current);\n          }\n\n          return;\n        }\n      });\n      map.current.on('mouseleave', `hover`, () => {\n        map.current.getCanvas().style.cursor = '';\n        popUpRef.current.remove();\n      });\n      map.current.addControl(nav.current);\n    }); // cleanup function to remove map on unmount\n\n    return () => map.current.remove();\n  }, [Popup, geoJson, poi, poiColor12Miles, poiColor6Miles, poiViews12Miles, poiViews6Miles]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Legend, {\n      type: \"dots\",\n      clusters: \"Clusters\",\n      pointCount: \"Views\",\n      clusterImg: clusterBlue,\n      unclusteredImg: unclusteredPoint,\n      unclusteredPoint: \"Unclustered Points\",\n      colorScheme: colorScheme,\n      steps: steps,\n      poi: \"POI\",\n      views: \"Views\",\n      poiColor6Miles: poiColor6Miles,\n      poiViews6Miles: poiViews6Miles,\n      poiColor12Miles: poiColor12Miles,\n      poiViews12Miles: poiViews12Miles,\n      poiColor18Miles: poiColor18Miles,\n      poiViews18Miles: poiViews18Miles\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      style: {\n        width: \"100%\",\n        height: \"100vh\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Mapbox, \"3BOSj8qnguIZjMIPfmJ9M2ZFyMM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Mapbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mapbox\");","map":{"version":3,"sources":["C:/Users/polia/Desktop/Overlay/src/pages/Mapbox.tsx"],"names":["useRef","useEffect","useState","mapboxgl","ReactDOM","makeStyles","Legend","mapboxStyle","states12MilesRadius","states12MilesSteps","states18MilesRadius","states18MilesSteps","states6MilesRadius","states6MilesSteps","statesHeatmapFill","statesHeatmapSteps","statesMapFilter","statesCircleStrokeWidth","useStyles","chartDiv","height","accessToken","Mapbox","geoJson","poi","Popup","colorScheme","setColorScheme","steps","setSteps","poiViews6Miles","setPoiViews6Miles","poiColor6Miles","setPoiColor6Miles","poiViews12Miles","setPoiViews12Miles","poiColor12Miles","setPoiColor12Miles","poiViews18Miles","setPoiViews18Miles","poiColor18Miles","setPoiColor18Miles","mapContainer","map","popUpRef","nav","geoCoder","classes","current","closeButton","closeOnClick","NavigationControl","showCompass","showZoom","Map","container","style","center","zoom","on","addSource","type","data","addLayer","id","source","paint","filter","e","f","queryRenderedFeatures","point","layers","length","getCanvas","cursor","popupNode","document","createElement","elem","render","setLngLat","lngLat","setDOMContent","addTo","remove","addControl","clusterBlue","unclusteredPoint","width"],"mappings":"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","sourcesContent":["// @ts-nocheck\nimport { useRef, useEffect, useState } from \"react\"\nimport mapboxgl from \"mapbox-gl\"\nimport \"mapbox-gl/dist/mapbox-gl.css\"\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder'\nimport ReactDOM from 'react-dom'\nimport { makeStyles } from '@material-ui/core'\nimport clusterBlue from \"../assets/clusterBlue.svg\"\nimport unclusteredPoint from \"../assets/unclusteredPoint.svg\"\nimport \"../styles/App.css\"\nimport Legend from \"../components/Legend\"\nimport { mapboxStyle, states12MilesRadius, states12MilesSteps, states18MilesRadius, states18MilesSteps, states6MilesRadius, states6MilesSteps, statesHeatmapFill, statesHeatmapSteps, statesMapFilter, statesCircleStrokeWidth, miles6, miles12, miles18 } from \"../helpers/Utils\"\n\n\nconst useStyles = makeStyles(() => ({\n  chartDiv: {\n    height: '25em'\n  }\n}))\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoiZW5nbWFwYm94IiwiYSI6ImNqY3M1ZXA5czM2ZGYzM283ZmhscDltcGMifQ.Za7ut_7UThGzvjWhX4ACJQ\";\n\n\nexport const Mapbox = ({ geoJson, poi, Popup }) => {\n  const [colorScheme, setColorScheme] = useState<Array<string>>([])\n  const [steps, setSteps] = useState<Array<number>>([])\n\n  const [poiViews6Miles, setPoiViews6Miles] = useState<Array<number>>([])\n  const [poiColor6Miles, setPoiColor6Miles] = useState<Array<string>>([])\n\n  const [poiViews12Miles, setPoiViews12Miles] = useState<Array<number>>([])\n  const [poiColor12Miles, setPoiColor12Miles] = useState<Array<string>>([])\n\n  const [poiViews18Miles, setPoiViews18Miles] = useState<Array<number>>([])\n  const [poiColor18Miles, setPoiColor18Miles] = useState<Array<string>>([])\n\n  const mapContainer = useRef()\n  const map = useRef()\n  const popUpRef = useRef()\n  const nav = useRef()\n  const geoCoder = useRef()\n\n\n  const classes = useStyles()\n\n\n  useEffect(() => {\n    setColorScheme(statesHeatmapFill)\n    setSteps(statesHeatmapSteps)\n\n    setPoiColor6Miles(states6MilesRadius)\n\n    setPoiViews6Miles(states6MilesSteps)\n\n    setPoiColor12Miles(states12MilesRadius)\n    setPoiViews12Miles(states12MilesSteps)\n\n    setPoiColor18Miles(states18MilesRadius)\n    setPoiViews18Miles(states18MilesSteps)\n  }, [])\n\n  useEffect(() => {\n    //initialize popup just once\n    popUpRef.current = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false,\n    })\n}, [])\n\nuseEffect(() => {\n  nav.current = new mapboxgl.NavigationControl({\n    showCompass: false,\n    showZoom: true\n  });\n\n\n},  [])\n\n\n\n  useEffect(() => {\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: mapboxStyle,\n      center: [-97, 36],\n      zoom: 3,\n    })\n\n    // only want to work with the map after it has fully loaded\n    // if you try to add sources and layers before the map has loaded\n    // things will not work properly\n    map.current.on(\"load\", () => {\n      map.current.addSource(\"sites\", {\n        type: \"geojson\",\n        data: poi,\n      })\n\n      map.current.addSource(\"states\", {\n        type: \"geojson\",\n        data: geoJson,\n      })\n\n      map.current.addLayer({\n        id: \"hover\",\n        type: \"fill\",\n        source: \"states\",\n        paint: {\n          \"fill-color\": statesMapFilter,\n          \"fill-opacity\": 0.8,\n          \"fill-outline-color\": \"#000\",\n        },\n        \n      })\n\n\n      map.current.addLayer({\n        id: \"unclustered-point-1\",\n        type: \"circle\",\n        source: \"sites\",\n        filter: [\"!\", [\"has\", \"point_count\"]],\n        paint: {\n          \"circle-opacity\": 0,\n          'circle-stroke-opacity': 0.5,\n          \"circle-radius\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"zoom\"],\n\n            // zoom is 5 (or less) -> circle radius will be 1px\n            5,\n            5,\n            // zoom is 10 (or greater) -> circle radius will be 5px\n            6,\n            12,\n\n            7,\n            24,\n\n            8,\n            36\n          ],\n          \"circle-stroke-width\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"zoom\"],\n            // zoom is 5 (or less) -> circle radius will be 1px\n            5,\n            3,\n            // zoom is 10 (or greater) -> circle radius will be 5px\n            6,\n            11,\n\n            7,\n            22,\n\n            8,\n            36\n          ],\n          \"circle-stroke-color\": statesCircleStrokeWidth,\n        },\n      })\n      map.current.addLayer({\n        id: \"unclustered-point\",\n        type: \"circle\",\n        source: \"sites\",\n        filter: [\"!\", [\"has\", \"point_count\"]],\n        paint: {\n          \"circle-color\": poiColor6Miles[0],\n          \"circle-radius\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"zoom\"],\n            // zoom is 5 (or less) -> circle radius will be 1px\n            5,\n            3,\n            // zoom is 10 (or greater) -> circle radius will be 5px\n            6,\n            20,\n          ],\n          \"circle-stroke-width\": [\n            \"interpolate\",\n            [\"linear\"],\n            [\"zoom\"],\n            // zoom is 5 (or less) -> circle radius will be 1px\n            5,\n            1,\n            // zoom is 10 (or greater) -> circle radius will be 5px\n            6,\n            8,\n          ],\n          \"circle-stroke-color\": [\n            \"case\", // Begin case expression\n            [\"<\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[0]],\n            poiColor12Miles[0],\n            [\n              \"all\",\n              [\">=\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[0]],\n              [\"<\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[1]],\n            ],\n            poiColor12Miles[1],\n            [\n              \"all\",\n              [\">=\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[1]],\n              [\"<\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[2]],\n            ],\n            poiColor12Miles[2],\n            [\n              \"all\",\n              [\">=\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[2]],\n              [\"<\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[3]],\n            ],\n            poiColor12Miles[3],\n            [\n              \"all\",\n              [\">=\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[3]],\n              [\"<\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[4]],\n            ],\n            poiColor12Miles[4],\n            [\">=\", [\"get\", \"twelveMilesViews\"], poiViews12Miles[4]],\n            poiColor12Miles[5],\n            \"#00c3a2\",\n          ],\n        },\n      })\n\n      map.current.on(\"click\", \"unclustered-point\", (e: any) => {\n        let f = map.current.queryRenderedFeatures(e.point, { layers: ['unclustered-point-1'] })\n\n        if (f.length) {\n            map.current.getCanvas().style.cursor = 'pointer'\n            let popupNode = document.createElement('div')\n            if (Popup) {\n                let elem = <Popup data={f[0]} />\n                ReactDOM.render(elem, popupNode)\n                popUpRef.current\n                    .setLngLat(e.lngLat)\n                    .setDOMContent(popupNode)\n                    .addTo(map.current)\n            }\n            return\n        }\n      })\n\n        map.current.on('mouseleave', `hover`, () => {\n        map.current.getCanvas().style.cursor = ''\n        popUpRef.current.remove()\n      }) \n      \n      map.current.addControl(nav.current)\n      \n     \n    })\n\n    // cleanup function to remove map on unmount\n    return () => map.current.remove()\n  }, [Popup, geoJson, poi, poiColor12Miles, poiColor6Miles, poiViews12Miles, poiViews6Miles])\n\n  return (\n    <>\n      <Legend\n        type=\"dots\"\n        clusters=\"Clusters\"\n        pointCount=\"Views\"\n        clusterImg={clusterBlue}\n        unclusteredImg={unclusteredPoint}\n        unclusteredPoint=\"Unclustered Points\"\n        colorScheme={colorScheme}\n        steps={steps}\n        poi=\"POI\"\n        views=\"Views\"\n        poiColor6Miles={poiColor6Miles}\n        poiViews6Miles={poiViews6Miles}\n        poiColor12Miles={poiColor12Miles}\n        poiViews12Miles={poiViews12Miles}\n        poiColor18Miles={poiColor18Miles}\n        poiViews18Miles={poiViews18Miles}\n      />\n      <div ref={mapContainer} style={{ width: \"100%\", height: \"100vh\" }} />\n    </>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}