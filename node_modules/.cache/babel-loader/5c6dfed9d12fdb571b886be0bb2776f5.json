{"ast":null,"code":"/**\r\n * Module for \"Drop Shadow\" filter.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Filter } from \"./Filter\";\nimport { color } from \"../../utils/Color\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creats a \"Drop Shadow\" filter.\r\n */\n\nvar DropShadowFilter =\n/** @class */\nfunction (_super) {\n  __extends(DropShadowFilter, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function DropShadowFilter() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"DropShadowFilter\"; // Create elements\n    // NOTE: we do not need to add each individual element to `_disposers`\n    // because `filterPrimitives` has an event handler which automatically adds\n    // anything added to it to `_disposers`\n\n    _this.color = color(\"#000\");\n    _this.feGaussianBlur = _this.paper.add(\"feGaussianBlur\");\n\n    _this.feGaussianBlur.attr({\n      \"result\": \"blurOut\",\n      \"in\": \"SourceGraphic\"\n    });\n\n    _this.filterPrimitives.push(_this.feGaussianBlur);\n\n    _this.feOffset = _this.paper.add(\"feOffset\");\n\n    _this.feOffset.attr({\n      \"result\": \"offsetBlur\"\n    });\n\n    _this.filterPrimitives.push(_this.feOffset);\n\n    _this.feFlood = _this.paper.add(\"feFlood\");\n\n    _this.feFlood.attr({\n      \"flood-color\": _this.color\n    });\n\n    _this.filterPrimitives.push(_this.feFlood);\n\n    _this.feComposite = _this.paper.add(\"feComposite\");\n\n    _this.feComposite.attr({\n      \"in2\": \"offsetBlur\",\n      operator: \"in\"\n    });\n\n    _this.filterPrimitives.push(_this.feComposite);\n\n    _this.feMerge = _this.paper.addGroup(\"feMerge\");\n\n    _this.feMerge.add(_this.paper.add(\"feMergeNode\"));\n\n    _this.feMerge.add(_this.paper.add(\"feMergeNode\").attr({\n      \"in\": \"SourceGraphic\"\n    }));\n\n    _this.filterPrimitives.push(_this.feMerge); // Set default properties\n\n\n    _this.width = 200;\n    _this.height = 200;\n    _this.blur = 1.5;\n    _this.dx = 3;\n    _this.dy = 3;\n    _this.opacity = 0.5;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(DropShadowFilter.prototype, \"color\", {\n    /**\r\n     * @return Color\r\n     */\n    get: function get() {\n      return this.properties.color;\n    },\n\n    /**\r\n     * Shadow color.\r\n     *\r\n     * @param value  Color\r\n     */\n    set: function set(value) {\n      this.properties.color = value;\n\n      if (this.feFlood) {\n        this.feFlood.attr({\n          \"flood-color\": value\n        });\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"opacity\", {\n    /**\r\n     * @return Opacity (0-1)\r\n     */\n    get: function get() {\n      return this.properties.opacity;\n    },\n\n    /**\r\n     * Opacity of the shadow. (0-1)\r\n     *\r\n     * @param value  Opacity (0-1)\r\n     */\n    set: function set(value) {\n      this.properties.opacity = value;\n      this.feFlood.attr({\n        \"flood-opacity\": value\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"dx\", {\n    /**\r\n     * @return Horizontal offset (px)\r\n     */\n    get: function get() {\n      return this.properties.dx;\n    },\n\n    /**\r\n     * Horizontal offset in pixels.\r\n     *\r\n     * @param value  Horizontal offset (px)\r\n     */\n    set: function set(value) {\n      this.properties.dx = value;\n      this.feOffset.attr({\n        \"dx\": value / this.scale\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"dy\", {\n    /**\r\n     * @return Vertical offset (px)\r\n     */\n    get: function get() {\n      return this.properties.dy;\n    },\n\n    /**\r\n     * Vertical offset in pixels.\r\n     *\r\n     * @param value Vertical offset (px)\r\n     */\n    set: function set(value) {\n      this.properties.dy = value;\n      this.feOffset.attr({\n        \"dy\": value / this.scale\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DropShadowFilter.prototype, \"blur\", {\n    /**\r\n     * @return Blur\r\n     */\n    get: function get() {\n      return this.properties.blur;\n    },\n\n    /**\r\n     * Blur.\r\n     *\r\n     * @param value  Blur\r\n     */\n    set: function set(value) {\n      this.properties.blur = value;\n      this.feGaussianBlur.attr({\n        \"stdDeviation\": value / this.scale\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * [updateScale description]\r\n   *\r\n   * @todo Description\r\n   */\n\n  DropShadowFilter.prototype.updateScale = function () {\n    this.dx = this.dx;\n    this.dy = this.dy;\n    this.blur = this.blur;\n  };\n\n  return DropShadowFilter;\n}(Filter);\n\nexport { DropShadowFilter };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"DropShadowFilter\"] = DropShadowFilter;","map":{"version":3,"mappings":"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","names":["Filter","color","registry","__extends","_super","_this","className","feGaussianBlur","paper","add","attr","filterPrimitives","push","feOffset","feFlood","feComposite","operator","feMerge","addGroup","width","height","blur","dx","dy","opacity","applyTheme","Object","DropShadowFilter","properties","value","scale","registeredClasses"],"sourceRoot":"","sources":["../../../../../../src/.internal/core/rendering/filters/DropShadowFilter.ts"],"sourcesContent":["/**\r\n * Module for \"Drop Shadow\" filter.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter, FilterProperties } from \"./Filter\";\r\nimport { AMElement } from \"../AMElement\";\r\nimport { Group } from \"../Group\";\r\nimport { Color, color } from \"../../utils/Color\";\r\nimport { registry } from \"../../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines additional properties relative to the \"Drop Shadow\" filter\r\n */\r\nexport interface DropShadowFilterProperties extends FilterProperties {\r\n\r\n\t/**\r\n\t * Horizontal offset in pixels.\r\n\t */\r\n\tdx: number;\r\n\r\n\t/**\r\n\t * Vertical offset in pixels.\r\n\t */\r\n\tdy: number;\r\n\r\n\t/**\r\n\t * Blur.\r\n\t */\r\n\tblur: number;\r\n\r\n\t/**\r\n\t * Shadow opacity. (0-1)\r\n\t */\r\n\topacity: number;\r\n\r\n\t/**\r\n\t * Shadow color.\r\n\t */\r\n\tcolor: Color;\r\n\r\n};\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creats a \"Drop Shadow\" filter.\r\n */\r\nexport class DropShadowFilter extends Filter {\r\n\r\n\t/**\r\n\t * Defines property types.\r\n\t */\r\n\tpublic _properties!: DropShadowFilterProperties;\r\n\r\n\t/**\r\n\t * A storage for Filter property/value pairs.\r\n\t *\r\n\t * @see [@link DropShadowFilterProperties]\r\n\t */\r\n\t//public propertyValues: Dictionary<DropShadowFilterProperties, any>;\r\n\r\n\r\n\t/**\r\n\t * Reference to the `<feGaussianBlur>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feGaussianBlur: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feOffset>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feOffset: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feFlood: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feFlood>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feComposite: AMElement;\r\n\r\n\t/**\r\n\t * Reference to the `<feMerge>` element.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic feMerge: Group;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"DropShadowFilter\";\r\n\r\n\t\t// Create elements\r\n\t\t// NOTE: we do not need to add each individual element to `_disposers`\r\n\t\t// because `filterPrimitives` has an event handler which automatically adds\r\n\t\t// anything added to it to `_disposers`\r\n\r\n\t\tthis.color = color(\"#000\");\r\n\r\n\t\tthis.feGaussianBlur = this.paper.add(\"feGaussianBlur\");\r\n\t\tthis.feGaussianBlur.attr({ \"result\": \"blurOut\", \"in\": \"SourceGraphic\" });\r\n\t\tthis.filterPrimitives.push(this.feGaussianBlur);\r\n\r\n\t\tthis.feOffset = this.paper.add(\"feOffset\");\r\n\t\tthis.feOffset.attr({ \"result\": \"offsetBlur\" });\r\n\t\tthis.filterPrimitives.push(this.feOffset);\r\n\r\n\t\tthis.feFlood = this.paper.add(\"feFlood\");\r\n\t\tthis.feFlood.attr({ \"flood-color\": this.color });\r\n\t\tthis.filterPrimitives.push(this.feFlood);\r\n\r\n\t\tthis.feComposite = this.paper.add(\"feComposite\");\r\n\t\tthis.feComposite.attr({ \"in2\": \"offsetBlur\", operator: \"in\" });\r\n\t\tthis.filterPrimitives.push(this.feComposite);\r\n\r\n\t\tthis.feMerge = this.paper.addGroup(\"feMerge\");\r\n\t\tthis.feMerge.add(this.paper.add(\"feMergeNode\"));\r\n\t\tthis.feMerge.add(this.paper.add(\"feMergeNode\").attr({ \"in\": \"SourceGraphic\" }));\r\n\t\tthis.filterPrimitives.push(this.feMerge);\r\n\r\n\t\t// Set default properties\r\n\t\tthis.width = 200;\r\n\t\tthis.height = 200;\r\n\t\tthis.blur = 1.5;\r\n\t\tthis.dx = 3;\r\n\t\tthis.dy = 3;\r\n\t\tthis.opacity = 0.5;\r\n\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Shadow color.\r\n\t *\r\n\t * @param value  Color\r\n\t */\r\n\tpublic set color(value: Color) {\r\n\t\tthis.properties.color = value;\r\n\t\tif(this.feFlood){\r\n\t\t\tthis.feFlood.attr({ \"flood-color\": value });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): Color {\r\n\t\treturn this.properties.color;\r\n\t}\r\n\r\n\t/**\r\n\t * Opacity of the shadow. (0-1)\r\n\t *\r\n\t * @param value  Opacity (0-1)\r\n\t */\r\n\tpublic set opacity(value: number) {\r\n\t\tthis.properties.opacity = value;\r\n\t\tthis.feFlood.attr({ \"flood-opacity\": value });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Opacity (0-1)\r\n\t */\r\n\tpublic get opacity(): number {\r\n\t\treturn this.properties.opacity;\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal offset in pixels.\r\n\t *\r\n\t * @param value  Horizontal offset (px)\r\n\t */\r\n\tpublic set dx(value: number) {\r\n\t\tthis.properties.dx = value;\r\n\t\tthis.feOffset.attr({ \"dx\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal offset (px)\r\n\t */\r\n\tpublic get dx(): number {\r\n\t\treturn this.properties.dx;\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical offset in pixels.\r\n\t *\r\n\t * @param value Vertical offset (px)\r\n\t */\r\n\tpublic set dy(value: number) {\r\n\t\tthis.properties.dy = value;\r\n\t\tthis.feOffset.attr({ \"dy\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical offset (px)\r\n\t */\r\n\tpublic get dy(): number {\r\n\t\treturn this.properties.dy;\r\n\t}\r\n\r\n\t/**\r\n\t * Blur.\r\n\t *\r\n\t * @param value  Blur\r\n\t */\r\n\tpublic set blur(value: number) {\r\n\t\tthis.properties.blur = value;\r\n\t\tthis.feGaussianBlur.attr({ \"stdDeviation\": value / this.scale });\r\n\t}\r\n\r\n\t/**\r\n\t * @return Blur\r\n\t */\r\n\tpublic get blur(): number {\r\n\t\treturn this.properties.blur;\r\n\t}\r\n\r\n\t/**\r\n\t * [updateScale description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected updateScale() {\r\n\t\tthis.dx = this.dx;\r\n\t\tthis.dy = this.dy;\r\n\t\tthis.blur = this.blur;\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DropShadowFilter\"] = DropShadowFilter;\r\n"]},"metadata":{},"sourceType":"module"}