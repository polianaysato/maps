{"ast":null,"code":"/**\r\n * Grip module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Button } from \"./Button\";\nimport { Sprite } from \"../Sprite\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { registry } from \"../Registry\";\nimport { percent } from \"../utils/Percent\";\nimport * as $path from \"../rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a grip element that can be used for scrolling or other things.\r\n *\r\n * @see {@link IGripEvents} for a list of available events\r\n * @see {@link IGripAdapters} for a list of available Adapters\r\n * @since 4.4.0\r\n */\n\nvar Grip =\n/** @class */\nfunction (_super) {\n  __extends(Grip, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Grip() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"Grip\";\n    var cs = new InterfaceColorSet(); // Set defaults\n\n    _this.layout = \"absolute\";\n\n    _this.padding(10, 10, 10, 10);\n\n    _this.margin(3, 3, 3, 3);\n\n    _this.background.fillOpacity = 0.3;\n\n    _this.background.cornerRadius(10, 10, 10, 10); // Create an icon\n\n\n    var icon = new Sprite();\n    icon.element = _this.paper.add(\"path\");\n    var path = $path.moveTo({\n      x: -6,\n      y: 0\n    });\n    path += $path.lineTo({\n      x: 6,\n      y: 0\n    });\n    path += $path.moveTo({\n      x: -8,\n      y: -6\n    });\n    path += $path.lineTo({\n      x: 0,\n      y: -12\n    });\n    path += $path.lineTo({\n      x: 8,\n      y: -6\n    });\n    path += $path.moveTo({\n      x: -8,\n      y: 6\n    });\n    path += $path.lineTo({\n      x: 0,\n      y: 12\n    });\n    path += $path.lineTo({\n      x: 8,\n      y: 6\n    });\n    icon.path = path;\n    icon.strokeWidth = 2;\n    icon.fillOpacity = 0;\n    icon.pixelPerfect = true;\n    icon.padding(0, 4, 0, 4);\n    icon.stroke = cs.getFor(\"text\");\n    icon.strokeOpacity = 0.7;\n    icon.align = \"center\";\n    icon.valign = \"middle\";\n    _this.icon = icon;\n\n    _this.label.dispose();\n\n    _this.label = undefined; // Set default position\n\n    _this.position = \"right\"; // Set up autohide\n\n    _this.autoHideDelay = 3000;\n\n    _this.events.on(\"shown\", function (ev) {\n      if (_this._autoHideTimeout) {\n        _this._autoHideTimeout.dispose();\n      }\n\n      if (_this.autoHideDelay) {\n        _this._autoHideTimeout = _this.setTimeout(function () {\n          _this.hide();\n        }, _this.autoHideDelay);\n      }\n    });\n\n    _this.events.on(\"down\", function (ev) {\n      if (_this._autoHideTimeout) {\n        _this._autoHideTimeout.dispose();\n      }\n    });\n\n    _this.events.on(\"out\", function (ev) {\n      if (_this.autoHideDelay) {\n        _this._autoHideTimeout = _this.setTimeout(function () {\n          _this.hide();\n        }, _this.autoHideDelay);\n      }\n    }); // Apply theme\n\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(Grip.prototype, \"position\", {\n    /**\r\n     * @return Position\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"position\");\n    },\n\n    /**\r\n     * Sets position of the grip.\r\n     *\r\n     * Available options: \"left\", \"right\" (default), \"top\", \"bottom\".\r\n     *\r\n     * @param  value  Position\r\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"position\", value)) {\n        switch (value) {\n          case \"left\":\n            this.align = \"left\";\n            this.valign = \"middle\";\n            this.horizontalCenter = \"left\";\n            this.verticalCenter = \"middle\";\n            this.icon.rotation = 0;\n            this.width = undefined;\n            this.height = percent(30);\n            break;\n\n          case \"right\":\n            this.align = \"right\";\n            this.valign = \"middle\";\n            this.horizontalCenter = \"right\";\n            this.verticalCenter = \"middle\";\n            this.icon.rotation = 0;\n            this.width = undefined;\n            this.height = percent(30);\n            break;\n\n          case \"top\":\n            this.align = \"center\";\n            this.valign = \"top\";\n            this.horizontalCenter = \"middle\";\n            this.verticalCenter = \"top\";\n            this.icon.rotation = 90;\n            this.width = percent(30);\n            this.height = undefined;\n            break;\n\n          case \"bottom\":\n            this.align = \"center\";\n            this.valign = \"bottom\";\n            this.horizontalCenter = \"middle\";\n            this.verticalCenter = \"bottom\";\n            this.icon.rotation = 90;\n            this.width = percent(30);\n            this.height = undefined;\n            break;\n\n          default:\n            this.align = \"center\";\n            this.valign = \"middle\";\n            this.horizontalCenter = \"middle\";\n            this.verticalCenter = \"middle\";\n            this.icon.rotation = 90;\n            this.width = percent(30);\n            this.height = undefined;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Grip.prototype, \"autoHideDelay\", {\n    /**\r\n     * @return Delay\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"autoHideDelay\");\n    },\n\n    /**\r\n     * Number of milliseconds to show grip until it is hidden automatically.\r\n     *\r\n     * @default 3000\r\n     * @param  value  Delay\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"autoHideDelay\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Grip;\n}(Button);\n\nexport { Grip };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Grip\"] = Grip;","map":{"version":3,"mappings":"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","names":["Button","Sprite","InterfaceColorSet","registry","percent","$path","__extends","_super","_this","className","cs","layout","padding","margin","background","fillOpacity","cornerRadius","icon","element","paper","add","path","moveTo","x","y","lineTo","strokeWidth","pixelPerfect","stroke","getFor","strokeOpacity","align","valign","label","dispose","undefined","position","autoHideDelay","events","on","ev","_autoHideTimeout","setTimeout","hide","applyTheme","Object","Grip","getPropertyValue","value","setPropertyValue","horizontalCenter","verticalCenter","rotation","width","height","registeredClasses"],"sourceRoot":"","sources":["../../../../../src/.internal/core/elements/Grip.ts"],"sourcesContent":["/**\r\n * Grip module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { IDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport { percent } from \"../utils/Percent\";\r\nimport * as $path from \"../rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Grip]].\r\n */\r\nexport interface IGripProperties extends IButtonProperties {\r\n\tposition: Align | VerticalAlign;\r\n\tautoHideDelay: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[Grip]] for [[Grip]].\r\n */\r\nexport interface IGripEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Grip]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IGripAdapters extends IButtonAdapters, IGripProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a grip element that can be used for scrolling or other things.\r\n *\r\n * @see {@link IGripEvents} for a list of available events\r\n * @see {@link IGripAdapters} for a list of available Adapters\r\n * @since 4.4.0\r\n */\r\nexport class Grip extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IGripProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IGripAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IGripEvents;\r\n\r\n\t\t/**\r\n\t * Disposer for grip autohide timeout.\r\n\t */\r\n\tprotected _autoHideTimeout: Optional<IDisposer>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"Grip\";\r\n\r\n\t\tconst cs = new InterfaceColorSet();\r\n\r\n\t\t// Set defaults\r\n\t\tthis.layout = \"absolute\";\r\n\r\n\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.margin(3, 3, 3, 3);\r\n\t\tthis.background.fillOpacity = 0.3;\r\n\t\tthis.background.cornerRadius(10, 10, 10, 10);\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: -6, y: 0 });\r\n\t\tpath += $path.lineTo({ x: 6, y: 0 });\r\n\t\tpath += $path.moveTo({ x: -8, y: -6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: -12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: -6 });\r\n\t\tpath += $path.moveTo({ x: -8, y: 6 });\r\n\t\tpath += $path.lineTo({ x: 0, y: 12 });\r\n\t\tpath += $path.lineTo({ x: 8, y: 6 });\r\n\t\ticon.path = path;\r\n\t\ticon.strokeWidth = 2;\r\n\t\ticon.fillOpacity = 0;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(0, 4, 0, 4);\r\n\t\ticon.stroke = cs.getFor(\"text\");\r\n\t\ticon.strokeOpacity = 0.7;\r\n\t\ticon.align = \"center\";\r\n\t\ticon.valign = \"middle\";\r\n\t\tthis.icon = icon;\r\n\r\n\t\tthis.label.dispose();\r\n\t\tthis.label = undefined;\r\n\r\n\t\t// Set default position\r\n\t\tthis.position = \"right\";\r\n\r\n\t\t// Set up autohide\r\n\t\tthis.autoHideDelay = 3000;\r\n\t\tthis.events.on(\"shown\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"down\", (ev) => {\r\n\t\t\tif (this._autoHideTimeout) {\r\n\t\t\t\tthis._autoHideTimeout.dispose();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"out\", (ev) => {\r\n\t\t\tif (this.autoHideDelay) {\r\n\t\t\t\tthis._autoHideTimeout = this.setTimeout(() => {\r\n\t\t\t\t\tthis.hide();\r\n\t\t\t\t}, this.autoHideDelay);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets position of the grip.\r\n\t *\r\n\t * Available options: \"left\", \"right\" (default), \"top\", \"bottom\".\r\n\t *\r\n\t * @param  value  Position\r\n\t */\r\n\tpublic set position(value: Align | VerticalAlign) {\r\n\t\tif (this.setPropertyValue(\"position\", value)) {\r\n\t\t\tswitch(value) {\r\n\t\t\t\tcase \"left\":\r\n\t\t\t\t\tthis.align = \"left\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"left\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"right\":\r\n\t\t\t\t\tthis.align = \"right\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"right\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 0;\r\n\t\t\t\t\tthis.width = undefined;\r\n\t\t\t\t\tthis.height = percent(30);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"top\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"top\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"top\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"bottom\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"bottom\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.align = \"center\";\r\n\t\t\t\t\tthis.valign = \"middle\";\r\n\t\t\t\t\tthis.horizontalCenter = \"middle\";\r\n\t\t\t\t\tthis.verticalCenter = \"middle\";\r\n\t\t\t\t\tthis.icon.rotation = 90;\r\n\t\t\t\t\tthis.width = percent(30);\r\n\t\t\t\t\tthis.height = undefined;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position\r\n\t */\r\n\tpublic get position(): Align | VerticalAlign {\r\n\t\treturn this.getPropertyValue(\"position\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of milliseconds to show grip until it is hidden automatically.\r\n\t *\r\n\t * @default 3000\r\n\t * @param  value  Delay\r\n\t */\r\n\tpublic set autoHideDelay(value: number) {\r\n\t\tthis.setPropertyValue(\"autoHideDelay\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Delay\r\n\t */\r\n\tpublic get autoHideDelay(): number {\r\n\t\treturn this.getPropertyValue(\"autoHideDelay\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Grip\"] = Grip;\r\n"]},"metadata":{},"sourceType":"module"}