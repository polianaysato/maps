{"ast":null,"code":"/**\r\n * Zoom out button functionality.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Button } from \"./Button\";\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $path from \"../rendering/Path\";\nimport * as $type from \"../../core/utils/Type\";\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link ICloseButtonEvents} for a list of available events\r\n * @see {@link ICloseButtonAdapters} for a list of available Adapters\r\n */\n\nvar CloseButton =\n/** @class */\nfunction (_super) {\n  __extends(CloseButton, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CloseButton() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"CloseButton\";\n\n    _this.padding(8, 8, 8, 8);\n\n    _this.showSystemTooltip = true;\n    _this.width = 30;\n    _this.height = 30;\n    var interfaceColors = new InterfaceColorSet();\n    _this.cursorOverStyle = MouseCursorStyle.pointer;\n    var background = _this.background;\n    background.cornerRadius(20, 20, 20, 20);\n    var bgc = interfaceColors.getFor(\"background\");\n    background.fill = bgc;\n    background.stroke = interfaceColors.getFor(\"primaryButton\");\n    background.strokeOpacity = 1;\n    background.strokeWidth = 1;\n    var downColor = interfaceColors.getFor(\"primaryButtonActive\");\n    var bhs = background.states.getKey(\"hover\");\n    bhs.properties.strokeWidth = 3;\n    bhs.properties.fill = bgc;\n    var bds = background.states.getKey(\"down\");\n    bds.properties.stroke = downColor;\n    bds.properties.fill = bgc; // Create an icon\n\n    var icon = new Sprite();\n    icon.element = _this.paper.add(\"path\");\n    icon.stroke = background.stroke;\n    _this.icon = icon; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  CloseButton.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n\n    var w = this.pixelWidth / 3;\n    var h = this.pixelHeight / 3;\n    var path = $path.moveTo({\n      x: -w / 2,\n      y: -h / 2\n    });\n    path += $path.lineTo({\n      x: w / 2,\n      y: h / 2\n    });\n    path += $path.moveTo({\n      x: w / 2,\n      y: -h / 2\n    });\n    path += $path.lineTo({\n      x: -w / 2,\n      y: h / 2\n    });\n    this.icon.path = path;\n    this.invalidateLayout();\n  };\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  CloseButton.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Close\");\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nexport { CloseButton };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"CloseButton\"] = CloseButton;","map":{"version":3,"mappings":"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","names":["Button","Sprite","registry","InterfaceColorSet","$path","$type","MouseCursorStyle","__extends","_super","_this","className","padding","showSystemTooltip","width","height","interfaceColors","cursorOverStyle","pointer","background","cornerRadius","bgc","getFor","fill","stroke","strokeOpacity","strokeWidth","downColor","bhs","states","getKey","properties","bds","icon","element","paper","add","applyTheme","CloseButton","validate","call","w","pixelWidth","h","pixelHeight","path","moveTo","x","y","lineTo","invalidateLayout","applyInternalDefaults","hasValue","readerTitle","language","translate","registeredClasses"],"sourceRoot":"","sources":["../../../../../src/.internal/core/elements/CloseButton.ts"],"sourcesContent":["/**\r\n * Zoom out button functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CloseButton]].\r\n */\r\nexport interface ICloseButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[CloseButton]].\r\n */\r\nexport interface ICloseButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CloseButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICloseButtonAdapters extends IButtonAdapters, ICloseButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link ICloseButtonEvents} for a list of available events\r\n * @see {@link ICloseButtonAdapters} for a list of available Adapters\r\n */\r\nexport class CloseButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICloseButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICloseButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICloseButtonEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"CloseButton\";\r\n\r\n\t\tthis.padding(8, 8, 8, 8);\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tthis.width = 30;\r\n\t\tthis.height = 30;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.cursorOverStyle = MouseCursorStyle.pointer;\r\n\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(20, 20, 20, 20);\r\n\r\n\t\tlet bgc = interfaceColors.getFor(\"background\");\r\n\t\tbackground.fill = bgc;\r\n\t\tbackground.stroke = interfaceColors.getFor(\"primaryButton\");\r\n\t\tbackground.strokeOpacity = 1;\r\n\t\tbackground.strokeWidth = 1;\r\n\r\n\t\tlet downColor = interfaceColors.getFor(\"primaryButtonActive\")\r\n\r\n\t\tlet bhs =background.states.getKey(\"hover\");\r\n\t\tbhs.properties.strokeWidth = 3;\r\n\t\tbhs.properties.fill = bgc;\r\n\r\n\t\tlet bds = background.states.getKey(\"down\");\t\t\t\t\r\n\t\tbds.properties.stroke = downColor;\r\n\t\tbds.properties.fill = bgc;\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\t\ticon.stroke = background.stroke;\r\n\r\n\t\tthis.icon = icon;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\r\n\t\tlet w = this.pixelWidth / 3;\r\n\t\tlet h = this.pixelHeight / 3;\r\n\r\n\t\tlet path = $path.moveTo({ x: -w / 2, y: -h / 2 });\r\n\t\tpath += $path.lineTo({ x: w / 2, y: h / 2 });\r\n\t\tpath += $path.moveTo({ x: w / 2, y: -h / 2 });\r\n\t\tpath += $path.lineTo({ x: -w / 2, y: h / 2 });\r\n\t\tthis.icon.path = path;\r\n\t\tthis.invalidateLayout();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Close\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CloseButton\"] = CloseButton;\r\n"]},"metadata":{},"sourceType":"module"}