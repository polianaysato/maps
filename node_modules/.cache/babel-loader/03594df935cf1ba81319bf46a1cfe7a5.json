{"ast":null,"code":"import { __read, __spread } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { system } from \"../System\";\nimport { registry } from \"../Registry\";\nimport { Container } from \"../Container\";\nimport { Component } from \"../Component\";\nimport { Paper } from \"../rendering/Paper\";\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\nimport { Preloader } from \"../elements/Preloader\";\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\nimport { Tooltip } from \"../elements/Tooltip\";\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\nimport { percent } from \"./Percent\";\nimport { options } from \"../Options\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\nimport * as $dom from \"./DOM\";\nimport * as $utils from \"./Utils\";\nimport * as $log from \"./Log\";\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\n\nfunction createChild(htmlElement, classType) {\n  var htmlContainer = $dom.getElement(htmlElement); // If there's no container available yet, we create a fake one\n\n  var tmpContainer = false;\n\n  if (!htmlContainer) {\n    htmlContainer = document.createElement(\"div\");\n    htmlContainer.style.width = \"200px\";\n    htmlContainer.style.height = \"200px\";\n    htmlContainer.style.top = \"0\";\n    htmlContainer.style.left = \"0\";\n    htmlContainer.style.visibility = \"hidden\";\n    htmlContainer.style.position = \"absolute\";\n    document.body.appendChild(htmlContainer);\n    tmpContainer = true;\n  }\n\n  if (htmlContainer) {\n    htmlContainer.innerHTML = \"\"; //htmlContainer.style.overflow = \"hidden\";\n\n    var svgDiv_1 = new SVGContainer(htmlContainer);\n    var paper = new Paper(svgDiv_1.SVGContainer, \"svg-\" + (svgContainers.length - 1)); // the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\n    // svg area - this is often needed when working with small charts.\n    // main container which holds content container and tooltips container\n\n    var container_1 = new Container();\n    container_1.htmlContainer = htmlContainer;\n    container_1.svgContainer = svgDiv_1;\n    container_1.width = percent(100);\n    container_1.height = percent(100);\n    container_1.background.fillOpacity = 0;\n    container_1.paper = paper;\n    paper.append(container_1.group); // Set up moving to proper element container if it's not yet ready at call time\n\n    if (tmpContainer) {\n      $dom.ready(function () {\n        container_1.moveHtmlContainer(htmlElement);\n      });\n    } // this is set from parent container, but this one doesn't have, so do it manually.\n\n\n    container_1.relativeWidth = 1;\n    container_1.relativeHeight = 1;\n    svgDiv_1.container = container_1; // creating classType instance\n\n    var sprite_1 = container_1.createChild(classType);\n    sprite_1.topParent = container_1;\n    var uid = sprite_1.uid;\n    registry.invalidSprites[uid] = [];\n    registry.invalidDatas[uid] = [];\n    registry.invalidPositions[uid] = [];\n    registry.invalidLayouts[uid] = [];\n    container_1.baseId = uid;\n    sprite_1.isBaseSprite = true;\n    sprite_1.focusFilter = new FocusFilter();\n    registry.baseSprites.push(sprite_1);\n    registry.baseSpritesByUid[uid] = sprite_1;\n    sprite_1.maskRectangle = {\n      x: 0,\n      y: 0,\n      width: Math.max(svgDiv_1.width || 0, 0),\n      height: Math.max(svgDiv_1.height || 0, 0)\n    }; // this solves issues with display:none, as all children are measured as 0x0\n\n    container_1.events.on(\"maxsizechanged\", function (event) {\n      if (event.previousWidth == 0 || event.previousHeight == 0) {\n        container_1.deepInvalidate();\n      }\n\n      if (sprite_1.maskRectangle) {\n        sprite_1.maskRectangle = {\n          x: 0,\n          y: 0,\n          width: Math.max(svgDiv_1.width || 0, 0),\n          height: Math.max(svgDiv_1.height || 0, 0)\n        };\n      }\n    });\n    var loopTimer_1 = null; // Checks to see whether the chart was properly disposed or not\n\n    var loop_1 = function loop_1() {\n      if (!sprite_1.isDisposed()) {\n        if ($dom.getRoot(sprite_1.dom) == null) {\n          if (options.autoDispose) {\n            container_1.htmlContainer = undefined;\n            svgDiv_1.htmlElement = undefined;\n            sprite_1.dispose();\n          } else {\n            $log.warn(\"Chart was not disposed\", sprite_1.uid);\n          }\n\n          loopTimer_1 = null;\n        } else {\n          loopTimer_1 = window.setTimeout(loop_1, 1000);\n        }\n      } else {\n        loopTimer_1 = null;\n      }\n    };\n\n    loop_1();\n    sprite_1.addDisposer(new Disposer(function () {\n      if (loopTimer_1 !== null) {\n        clearTimeout(loopTimer_1);\n      }\n\n      $array.remove(registry.baseSprites, sprite_1);\n      registry.baseSpritesByUid[sprite_1.uid] = undefined;\n    })); // TODO figure out a better way of doing this\n\n    sprite_1.addDisposer(container_1); // tooltip container\n\n    var tooltipContainer_1 = container_1.createChild(Container);\n    tooltipContainer_1.topParent = container_1;\n    tooltipContainer_1.width = percent(100);\n    tooltipContainer_1.height = percent(100);\n    tooltipContainer_1.isMeasured = false;\n    container_1.tooltipContainer = tooltipContainer_1;\n    sprite_1.tooltip = new Tooltip();\n    sprite_1.tooltip.hide(0);\n    sprite_1.tooltip.setBounds({\n      x: 0,\n      y: 0,\n      width: tooltipContainer_1.maxWidth,\n      height: tooltipContainer_1.maxHeight\n    });\n    tooltipContainer_1.events.on(\"maxsizechanged\", function () {\n      $type.getValue(sprite_1.tooltip).setBounds({\n        x: 0,\n        y: 0,\n        width: tooltipContainer_1.maxWidth,\n        height: tooltipContainer_1.maxHeight\n      });\n    }, undefined, false); //@todo: maybe we don't need to create one by default but only on request?\n\n    var preloader_1 = new Preloader();\n    preloader_1.events.on(\"inited\", function () {\n      preloader_1.__disabled = true;\n    }, undefined, false);\n    container_1.preloader = preloader_1; //if (!options.commercialLicense) {\n\n    if (sprite_1 instanceof Container && !sprite_1.hasLicense()) {\n      var logo_1 = tooltipContainer_1.createChild(AmChartsLogo);\n      tooltipContainer_1.events.on(\"maxsizechanged\", function (ev) {\n        if (tooltipContainer_1.maxWidth <= 100 || tooltipContainer_1.maxHeight <= 50) {\n          logo_1.hide();\n        } else if (logo_1.isHidden || logo_1.isHiding) {\n          logo_1.show();\n        }\n      }, undefined, false);\n      sprite_1.logo = logo_1;\n      logo_1.align = \"left\";\n      logo_1.valign = \"bottom\";\n    }\n\n    $utils.used(sprite_1.numberFormatter); // need to create one.\n    // Set this as an autonomouse instance\n    // Controls like Preloader, Export will use this.\n\n    container_1.isStandaloneInstance = true;\n\n    if (options.onlyShowOnViewport) {\n      if (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\n        sprite_1.__disabled = true;\n        sprite_1.tooltipContainer.__disabled = true;\n        var disposers = [$dom.addEventListener(window, \"DOMContentLoaded\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"load\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"resize\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"scroll\", function () {\n          viewPortHandler(sprite_1);\n        })];\n\n        if (options.viewportTarget) {\n          var targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\n\n          for (var i = 0; i < targets.length; i++) {\n            var target = targets[i];\n            disposers.push($dom.addEventListener(target, \"resize\", function () {\n              viewPortHandler(sprite_1);\n            }));\n            disposers.push($dom.addEventListener(target, \"scroll\", function () {\n              viewPortHandler(sprite_1);\n            }));\n          }\n        }\n\n        var disposer = new MultiDisposer(disposers);\n        sprite_1.addDisposer(disposer);\n        sprite_1.vpDisposer = disposer;\n      } else if (options.queue) {\n        addToQueue(sprite_1);\n      }\n    } else if (options.queue) {\n      addToQueue(sprite_1);\n    }\n\n    return sprite_1;\n  } else {\n    system.log(\"html container not found\");\n    throw new Error(\"html container not found\");\n  }\n}\n/**\r\n * Disposes all of the currently active charts.\r\n */\n\n\nexport function disposeAllCharts() {\n  while (registry.baseSprites.length !== 0) {\n    registry.baseSprites.pop().dispose();\n  }\n}\nexport function addToQueue(sprite) {\n  if (registry.queue.indexOf(sprite) == -1) {\n    sprite.__disabled = true;\n    sprite.tooltipContainer.__disabled = true;\n    sprite.events.disableType(\"appeared\");\n\n    if (registry.queue.length == 0) {\n      registry.events.once(\"exitframe\", function () {\n        queueHandler(sprite);\n      });\n      system.requestFrame();\n    }\n\n    sprite.addDisposer(new Disposer(function () {\n      removeFromQueue(sprite);\n    }));\n    registry.queue.push(sprite);\n  }\n}\nexport function removeFromQueue(sprite) {\n  var index = registry.queue.indexOf(sprite);\n\n  if (index >= 0) {\n    registry.queue.splice(registry.queue.indexOf(sprite), 1);\n    var nextSprite = registry.queue[index];\n\n    if (nextSprite) {\n      queueHandler(nextSprite);\n    }\n  }\n}\n/**\r\n * Checks whether the chart was not initialized fully due to setting\r\n * of `onlyShowOnViewport`. If it hasn't and is now in the viewport\r\n * the chart will be initialized.\r\n *\r\n * @since 4.9.12\r\n * @param  sprite  Top-level chart object\r\n */\n\nexport function viewPortHandler(sprite) {\n  if (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\n    if (sprite.vpDisposer) {\n      sprite.vpDisposer.dispose();\n    }\n\n    addToQueue(sprite);\n  }\n}\nexport function queueHandler(sprite) {\n  if (sprite && sprite.tooltipContainer) {\n    sprite.__disabled = false;\n    sprite.tooltipContainer.__disabled = false;\n    sprite.events.enableType(\"appeared\");\n    sprite.dispatch(\"removedfromqueue\");\n\n    if (sprite.showOnInit) {\n      sprite.events.on(\"appeared\", function () {\n        removeFromQueue(sprite);\n      });\n    }\n\n    if (sprite.vpDisposer) {\n      sprite.vpDisposer.dispose();\n    }\n\n    if (sprite instanceof Container) {\n      sprite.invalidateLabels();\n    }\n\n    if (sprite.tooltipContainer) {\n      sprite.tooltipContainer.invalidateLayout();\n    }\n\n    if (sprite instanceof Component) {\n      sprite.invalidateData();\n      sprite.reinit();\n      sprite.events.once(\"datavalidated\", function () {\n        if (sprite.showOnInit) {\n          sprite.appear();\n        } else {\n          removeFromQueue(sprite);\n        }\n      });\n    } else {\n      sprite.reinit();\n      sprite.events.once(\"inited\", function () {\n        removeFromQueue(sprite);\n      });\n\n      if (sprite.showOnInit) {\n        sprite.appear();\n      }\n    }\n  }\n}\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\n\nexport function create(htmlElement, classType) {\n  // This is a nasty hack for the benefit of vanilla JS users, who do not\n  // enjoy benefits of type-check anyway.\n  // We're allowing passing in a name of the class rather than type reference\n  // itself.\n  var classError;\n\n  if ($type.isString(classType)) {\n    if ($type.hasValue(registry.registeredClasses[classType])) {\n      classType = registry.registeredClasses[classType];\n    } else {\n      classType = registry.registeredClasses[\"Container\"];\n      classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\n    }\n  } // Create the chart\n\n\n  var chart = createChild(htmlElement, classType); // Error?\n\n  if (classError) {\n    chart.raiseCriticalError(classError);\n  }\n\n  return chart;\n}\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\n\nexport function createFromConfig(config, htmlElement, classType) {\n  // Extract chart type from config if necessary\n  if (!$type.hasValue(classType)) {\n    classType = config.type;\n    delete config.type;\n  } // Extract element from config if necessary\n\n\n  if (!$type.hasValue(htmlElement)) {\n    htmlElement = config.container;\n    delete config.container;\n  } // Check if we need to extract actual type reference\n\n\n  var finalType;\n  var classError;\n\n  if ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\n    finalType = registry.registeredClasses[classType];\n  } else if (typeof classType !== \"function\") {\n    finalType = Container;\n    classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\n  } else {\n    finalType = classType;\n  } // Create the chart\n\n\n  var chart = createChild(htmlElement, finalType); // Set config\n\n  if (classError) {\n    chart.raiseCriticalError(classError);\n  } else {\n    chart.config = config;\n  }\n\n  return chart;\n}\n/**\r\n * Useful in creating real queues form mult-chart creation.\r\n *\r\n * Accepts a reference to a function which crates and returns actual chart\r\n * object.\r\n *\r\n * It returns a `Promise` which you can use to catch chart instance once it's\r\n * created.\r\n *\r\n * ```TypeScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   let chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   let chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   var chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   var chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Deferred_daisy_chained_instantiation} for more information\r\n * @since 4.10.0\r\n * @param  callback  Callback function that creates chart\r\n * @param  scope     Scope to call callback in\r\n * @param  ...rest   Parameters to pass into callback\r\n * @return           Promise with chart instance\r\n */\n\nexport function createDeferred(callback, scope) {\n  var rest = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    rest[_i - 2] = arguments[_i];\n  }\n\n  return new Promise(function (resolve, reject) {\n    registry.deferred.push({\n      scope: scope,\n      callback: callback,\n      args: rest,\n      resolve: resolve\n    });\n\n    if (registry.deferred.length == 1) {\n      processNextDeferred();\n    }\n  });\n}\n\nfunction processNextDeferred() {\n  var _a;\n\n  var next = registry.deferred[0];\n\n  if (next) {\n    var sprite_2 = (_a = next.callback).call.apply(_a, __spread([next.scope], next.args));\n\n    sprite_2.events.on(\"ready\", function () {\n      next.resolve(sprite_2);\n      registry.deferred.shift();\n\n      if (options.deferredDelay) {\n        setTimeout(processNextDeferred, options.deferredDelay);\n      } else {\n        processNextDeferred();\n      }\n    });\n  }\n}\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\n\n\nexport function useTheme(value) {\n  if (registry.themes.indexOf(value) === -1) {\n    registry.themes.push(value);\n  }\n}\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\n\nexport function unuseTheme(value) {\n  $array.remove(registry.themes, value);\n}\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\n\nexport function unuseAllThemes() {\n  registry.themes = [];\n}\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\n\nexport function addLicense(license) {\n  options.licenses.push(license);\n}","map":{"version":3,"mappings":"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","names":["system","registry","Container","Component","Paper","SVGContainer","svgContainers","FocusFilter","Preloader","AmChartsLogo","Tooltip","Disposer","MultiDisposer","percent","options","$array","$type","$dom","$utils","$log","createChild","htmlElement","classType","htmlContainer","getElement","tmpContainer","document","createElement","style","width","height","top","left","visibility","position","body","appendChild","innerHTML","svgDiv_1","paper","length","container_1","svgContainer","background","fillOpacity","append","group","ready","moveHtmlContainer","relativeWidth","relativeHeight","container","sprite_1","topParent","uid","invalidSprites","invalidDatas","invalidPositions","invalidLayouts","baseId","isBaseSprite","focusFilter","baseSprites","push","baseSpritesByUid","maskRectangle","x","y","Math","max","events","on","event","previousWidth","previousHeight","deepInvalidate","loopTimer_1","loop_1","isDisposed","getRoot","dom","autoDispose","undefined","dispose","warn","window","setTimeout","addDisposer","clearTimeout","remove","tooltipContainer_1","isMeasured","tooltipContainer","tooltip","hide","setBounds","maxWidth","maxHeight","getValue","preloader_1","__disabled","preloader","hasLicense","logo_1","ev","isHidden","isHiding","show","logo","align","valign","used","numberFormatter","isStandaloneInstance","onlyShowOnViewport","isElementInViewport","viewportTarget","disposers","addEventListener","viewPortHandler","targets","isArray","i","target","disposer","vpDisposer","queue","addToQueue","log","Error","disposeAllCharts","pop","sprite","indexOf","disableType","once","queueHandler","requestFrame","removeFromQueue","index","splice","nextSprite","enableType","dispatch","showOnInit","invalidateLabels","invalidateLayout","invalidateData","reinit","appear","create","classError","isString","hasValue","registeredClasses","chart","raiseCriticalError","createFromConfig","config","type","finalType","createDeferred","callback","scope","rest","Promise","resolve","reject","deferred","args","processNextDeferred","next","sprite_2","call","apply","_a","__spread","shift","deferredDelay","useTheme","value","themes","unuseTheme","unuseAllThemes","addLicense","license","licenses"],"sourceRoot":"","sources":["../../../../../src/.internal/core/utils/Instance.ts"],"sourcesContent":["/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { system } from \"../System\";\r\nimport { registry } from \"../Registry\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { Paper } from \"../rendering/Paper\";\r\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\r\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\r\nimport { ITheme } from \"../../themes/ITheme\";\r\nimport { Tooltip } from \"../elements/Tooltip\";\r\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\r\nimport { percent } from \"./Percent\";\r\nimport { options } from \"../Options\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport * as $dom from \"./DOM\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $log from \"./Log\";\r\n\r\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\r\nfunction createChild<T extends Sprite>(htmlElement: $type.Optional<HTMLElement | string>, classType: { new(): T; }): T {\r\n\tlet htmlContainer = $dom.getElement(htmlElement);\r\n\r\n\t// If there's no container available yet, we create a fake one\r\n\tlet tmpContainer = false;\r\n\tif (!htmlContainer) {\r\n\t\thtmlContainer = document.createElement(\"div\");\r\n\t\thtmlContainer.style.width = \"200px\";\r\n\t\thtmlContainer.style.height = \"200px\";\r\n\t\thtmlContainer.style.top = \"0\";\r\n\t\thtmlContainer.style.left = \"0\";\r\n\t\thtmlContainer.style.visibility = \"hidden\";\r\n\t\thtmlContainer.style.position = \"absolute\";\r\n\t\tdocument.body.appendChild(htmlContainer);\r\n\t\ttmpContainer = true;\r\n\t}\r\n\r\n\tif (htmlContainer) {\r\n\r\n\t\thtmlContainer.innerHTML = \"\";\r\n\t\t//htmlContainer.style.overflow = \"hidden\";\r\n\r\n\t\tlet svgDiv = new SVGContainer(htmlContainer);\r\n\t\tlet paper = new Paper(svgDiv.SVGContainer, \"svg-\" + (svgContainers.length - 1));\r\n\r\n\t\t// the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\r\n\t\t// svg area - this is often needed when working with small charts.\r\n\r\n\t\t// main container which holds content container and tooltips container\r\n\t\tlet container = new Container();\r\n\t\tcontainer.htmlContainer = htmlContainer;\r\n\t\tcontainer.svgContainer = svgDiv;\r\n\t\tcontainer.width = percent(100);\r\n\t\tcontainer.height = percent(100);\r\n\t\tcontainer.background.fillOpacity = 0;\r\n\t\tcontainer.paper = paper;\r\n\t\tpaper.append(container.group);\r\n\r\n\t\t// Set up moving to proper element container if it's not yet ready at call time\r\n\t\tif (tmpContainer) {\r\n\t\t\t$dom.ready(() => {\r\n\t\t\t\tcontainer.moveHtmlContainer(htmlElement);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// this is set from parent container, but this one doesn't have, so do it manually.\r\n\t\tcontainer.relativeWidth = 1;\r\n\t\tcontainer.relativeHeight = 1;\r\n\r\n\t\tsvgDiv.container = container;\r\n\r\n\t\t// creating classType instance\r\n\t\tlet sprite = container.createChild(classType);\r\n\t\tsprite.topParent = container;\r\n\t\tlet uid = sprite.uid;\r\n\r\n\t\tregistry.invalidSprites[uid] = [];\r\n\t\tregistry.invalidDatas[uid] = [];\r\n\t\tregistry.invalidPositions[uid] = [];\r\n\t\tregistry.invalidLayouts[uid] = [];\r\n\r\n\t\tcontainer.baseId = uid;\r\n\r\n\t\tsprite.isBaseSprite = true;\r\n\t\tsprite.focusFilter = new FocusFilter();\r\n\t\tregistry.baseSprites.push(sprite);\r\n\t\tregistry.baseSpritesByUid[uid] = sprite;\r\n\r\n\t\tsprite.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv.width || 0, 0), height: Math.max(svgDiv.height || 0, 0) };\r\n\r\n\t\t// this solves issues with display:none, as all children are measured as 0x0\r\n\t\tcontainer.events.on(\"maxsizechanged\", (event) => {\r\n\t\t\tif (event.previousWidth == 0 || event.previousHeight == 0) {\r\n\t\t\t\tcontainer.deepInvalidate();\r\n\t\t\t}\r\n\t\t\tif (sprite.maskRectangle) {\r\n\t\t\t\tsprite.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv.width || 0, 0), height: Math.max(svgDiv.height || 0, 0) };\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet loopTimer: number | null = null;\r\n\r\n\t\t// Checks to see whether the chart was properly disposed or not\r\n\t\tconst loop = () => {\r\n\t\t\tif (!sprite.isDisposed()) {\r\n\t\t\t\tif ($dom.getRoot(sprite.dom) == null) {\r\n\t\t\t\t\tif (options.autoDispose) {\r\n\t\t\t\t\t\tcontainer.htmlContainer = undefined;\r\n\t\t\t\t\t\tsvgDiv.htmlElement = undefined;\r\n\t\t\t\t\t\tsprite.dispose();\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t$log.warn(\"Chart was not disposed\", sprite.uid);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tloopTimer = null;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tloopTimer = window.setTimeout(loop, 1000);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tloopTimer = null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tloop();\r\n\r\n\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\tif (loopTimer !== null) {\r\n\t\t\t\tclearTimeout(loopTimer);\r\n\t\t\t}\r\n\t\t\t$array.remove(registry.baseSprites, sprite);\r\n\t\t\tregistry.baseSpritesByUid[sprite.uid] = undefined;\r\n\t\t}));\r\n\r\n\t\t// TODO figure out a better way of doing this\r\n\t\tsprite.addDisposer(container);\r\n\r\n\t\t// tooltip container\r\n\t\tlet tooltipContainer: Container = container.createChild(Container);\r\n\t\ttooltipContainer.topParent = container;\r\n\t\ttooltipContainer.width = percent(100);\r\n\t\ttooltipContainer.height = percent(100);\r\n\t\ttooltipContainer.isMeasured = false;\r\n\t\tcontainer.tooltipContainer = tooltipContainer;\r\n\r\n\t\tsprite.tooltip = new Tooltip();\r\n\t\tsprite.tooltip.hide(0);\r\n\t\tsprite.tooltip.setBounds({ x: 0, y: 0, width: tooltipContainer.maxWidth, height: tooltipContainer.maxHeight });\r\n\r\n\t\ttooltipContainer.events.on(\"maxsizechanged\", () => {\r\n\t\t\t$type.getValue(sprite.tooltip).setBounds({ x: 0, y: 0, width: tooltipContainer.maxWidth, height: tooltipContainer.maxHeight });\r\n\t\t}, undefined, false)\r\n\r\n\t\t//@todo: maybe we don't need to create one by default but only on request?\r\n\r\n\t\tlet preloader = new Preloader();\r\n\t\tpreloader.events.on(\"inited\", () => {\r\n\t\t\tpreloader.__disabled = true;\r\n\t\t}, undefined, false);\r\n\t\tcontainer.preloader = preloader;\r\n\r\n\t\t//if (!options.commercialLicense) {\r\n\t\tif (sprite instanceof Container && !sprite.hasLicense()) {\r\n\t\t\tlet logo = tooltipContainer.createChild(AmChartsLogo);\r\n\t\t\ttooltipContainer.events.on(\"maxsizechanged\", (ev) => {\r\n\t\t\t\tif ((tooltipContainer.maxWidth <= 100) || (tooltipContainer.maxHeight <= 50)) {\r\n\t\t\t\t\tlogo.hide();\r\n\t\t\t\t}\r\n\t\t\t\telse if (logo.isHidden || logo.isHiding) {\r\n\t\t\t\t\tlogo.show();\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false);\r\n\t\t\tsprite.logo = logo;\r\n\t\t\tlogo.align = \"left\";\r\n\t\t\tlogo.valign = \"bottom\";\r\n\t\t}\r\n\r\n\t\t$utils.used(sprite.numberFormatter); // need to create one.\r\n\r\n\t\t// Set this as an autonomouse instance\r\n\t\t// Controls like Preloader, Export will use this.\r\n\t\tcontainer.isStandaloneInstance = true;\r\n\r\n\t\tif (options.onlyShowOnViewport) {\r\n\t\t\tif (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t\tsprite.tooltipContainer.__disabled = true;\r\n\r\n\t\t\t\tlet disposers = [\r\n\t\t\t\t\t$dom.addEventListener(window, \"DOMContentLoaded\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"load\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"resize\", function() { viewPortHandler(sprite); }),\r\n\t\t\t\t\t$dom.addEventListener(window, \"scroll\", function() { viewPortHandler(sprite); })\r\n\t\t\t\t];\r\n\r\n\t\t\t\tif (options.viewportTarget) {\r\n\t\t\t\t\tconst targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\r\n\t\t\t\t\tfor (let i = 0; i < targets.length; i++) {\r\n\t\t\t\t\t\tconst target = targets[i];\r\n\t\t\t\t\t\tdisposers.push($dom.addEventListener(target, \"resize\", function() { viewPortHandler(sprite); }));\r\n\t\t\t\t\t\tdisposers.push($dom.addEventListener(target, \"scroll\", function() { viewPortHandler(sprite); }));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet disposer = new MultiDisposer(disposers);\r\n\r\n\t\t\t\tsprite.addDisposer(disposer);\r\n\t\t\t\tsprite.vpDisposer = disposer;\r\n\t\t\t}\r\n\t\t\telse if (options.queue) {\r\n\t\t\t\taddToQueue(sprite);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (options.queue) {\r\n\t\t\taddToQueue(sprite);\r\n\t\t}\r\n\r\n\t\treturn sprite;\r\n\t}\r\n\telse {\r\n\t\tsystem.log(\"html container not found\");\r\n\t\tthrow new Error(\"html container not found\");\r\n\t}\r\n}\r\n\r\n/**\r\n * Disposes all of the currently active charts.\r\n */\r\nexport function disposeAllCharts(): void {\r\n\twhile (registry.baseSprites.length !== 0) {\r\n\t\tregistry.baseSprites.pop().dispose();\r\n\t}\r\n}\r\n\r\nexport function addToQueue(sprite: Sprite) {\r\n\tif (registry.queue.indexOf(sprite) == -1) {\r\n\t\tsprite.__disabled = true;\r\n\t\tsprite.tooltipContainer.__disabled = true;\r\n\t\tsprite.events.disableType(\"appeared\");\r\n\r\n\t\tif (registry.queue.length == 0) {\r\n\t\t\tregistry.events.once(\"exitframe\", () => {\r\n\t\t\t\tqueueHandler(sprite);\r\n\t\t\t})\r\n\t\t\tsystem.requestFrame();\r\n\t\t}\r\n\r\n\t\tsprite.addDisposer(new Disposer(() => {\r\n\t\t\tremoveFromQueue(sprite);\r\n\t\t}))\r\n\r\n\t\tregistry.queue.push(sprite);\r\n\t}\r\n}\r\n\r\nexport function removeFromQueue(sprite: Sprite) {\r\n\tlet index = registry.queue.indexOf(sprite);\r\n\tif (index >= 0) {\r\n\t\tregistry.queue.splice(registry.queue.indexOf(sprite), 1);\r\n\t\tlet nextSprite = registry.queue[index];\r\n\t\tif (nextSprite) {\r\n\t\t\tqueueHandler(nextSprite);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Checks whether the chart was not initialized fully due to setting\r\n * of `onlyShowOnViewport`. If it hasn't and is now in the viewport\r\n * the chart will be initialized.\r\n *\r\n * @since 4.9.12\r\n * @param  sprite  Top-level chart object\r\n */\r\nexport function viewPortHandler(sprite: Sprite) {\r\n\tif (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\r\n\r\n\t\tif (sprite.vpDisposer) {\r\n\t\t\tsprite.vpDisposer.dispose();\r\n\t\t}\r\n\r\n\t\taddToQueue(sprite);\r\n\t}\r\n}\r\n\r\nexport function queueHandler(sprite: Sprite) {\r\n\tif (sprite && sprite.tooltipContainer) {\r\n\t\tsprite.__disabled = false;\r\n\t\tsprite.tooltipContainer.__disabled = false;\r\n\t\tsprite.events.enableType(\"appeared\");\r\n\t\tsprite.dispatch(\"removedfromqueue\");\r\n\r\n\t\tif (sprite.showOnInit) {\r\n\t\t\tsprite.events.on(\"appeared\", () => {\r\n\t\t\t\tremoveFromQueue(sprite);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (sprite.vpDisposer) {\r\n\t\t\tsprite.vpDisposer.dispose();\r\n\t\t}\r\n\t\tif (sprite instanceof Container) {\r\n\t\t\tsprite.invalidateLabels();\r\n\t\t}\r\n\r\n\t\tif (sprite.tooltipContainer) {\r\n\t\t\tsprite.tooltipContainer.invalidateLayout();\r\n\t\t}\r\n\t\tif (sprite instanceof Component) {\r\n\t\t\tsprite.invalidateData();\r\n\t\t\tsprite.reinit();\r\n\r\n\t\t\tsprite.events.once(\"datavalidated\", () => {\r\n\t\t\t\tif (sprite.showOnInit) {\r\n\t\t\t\t\tsprite.appear();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tremoveFromQueue(sprite);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsprite.reinit();\r\n\t\t\tsprite.events.once(\"inited\", () => {\r\n\t\t\t\tremoveFromQueue(sprite);\r\n\t\t\t})\r\n\t\t\tif (sprite.showOnInit) {\r\n\t\t\t\tsprite.appear();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\r\nexport function create<T extends Sprite>(htmlElement: $type.Optional<HTMLElement | string>, classType: { new(): T; }): T {\r\n\r\n\t// This is a nasty hack for the benefit of vanilla JS users, who do not\r\n\t// enjoy benefits of type-check anyway.\r\n\t// We're allowing passing in a name of the class rather than type reference\r\n\t// itself.\r\n\tlet classError: $type.Optional<Error>;\r\n\tif ($type.isString(classType)) {\r\n\t\tif ($type.hasValue(registry.registeredClasses[classType])) {\r\n\t\t\tclassType = registry.registeredClasses[classType];\r\n\t\t}\r\n\t\telse {\r\n\t\t\tclassType = registry.registeredClasses[\"Container\"];\r\n\t\t\tclassError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n\t\t}\r\n\t}\r\n\r\n\t// Create the chart\r\n\tlet chart = createChild(htmlElement, classType);\r\n\r\n\t// Error?\r\n\tif (classError) {\r\n\t\tchart.raiseCriticalError(classError);\r\n\t}\r\n\r\n\treturn chart;\r\n\r\n}\r\n\r\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\r\nexport function createFromConfig(config: { [index: string]: any }, htmlElement?: string | HTMLElement, classType?: { new(): Sprite; } | string): Sprite {\r\n\r\n\t// Extract chart type from config if necessary\r\n\tif (!$type.hasValue(classType)) {\r\n\t\tclassType = config.type;\r\n\t\tdelete config.type;\r\n\t}\r\n\r\n\t// Extract element from config if necessary\r\n\tif (!$type.hasValue(htmlElement)) {\r\n\t\thtmlElement = config.container;\r\n\t\tdelete config.container;\r\n\t}\r\n\r\n\t// Check if we need to extract actual type reference\r\n\tlet finalType;\r\n\tlet classError: $type.Optional<Error>;\r\n\tif ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\r\n\t\tfinalType = registry.registeredClasses[classType];\r\n\t}\r\n\telse if (typeof classType !== \"function\") {\r\n\t\tfinalType = Container;\r\n\t\tclassError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n\t}\r\n\telse {\r\n\t\tfinalType = classType;\r\n\t}\r\n\r\n\t// Create the chart\r\n\tlet chart = createChild(htmlElement, finalType);\r\n\r\n\t// Set config\r\n\tif (classError) {\r\n\t\tchart.raiseCriticalError(classError);\r\n\t}\r\n\telse {\r\n\t\tchart.config = config;\r\n\t}\r\n\r\n\treturn chart;\r\n\r\n}\r\n\r\n/**\r\n * Useful in creating real queues form mult-chart creation.\r\n *\r\n * Accepts a reference to a function which crates and returns actual chart\r\n * object.\r\n *\r\n * It returns a `Promise` which you can use to catch chart instance once it's\r\n * created.\r\n *\r\n * ```TypeScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   let chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   let chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   var chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   var chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Deferred_daisy_chained_instantiation} for more information\r\n * @since 4.10.0\r\n * @param  callback  Callback function that creates chart\r\n * @param  scope     Scope to call callback in\r\n * @param  ...rest   Parameters to pass into callback\r\n * @return           Promise with chart instance\r\n */\r\nexport function createDeferred(callback: (...args: Array<any>) => Sprite, scope?: any, ...rest: Array<any>): Promise<Sprite> {\r\n\treturn new Promise<Sprite>((resolve, reject) => {\r\n\t\tregistry.deferred.push({\r\n\t\t\tscope: scope,\r\n\t\t\tcallback: callback,\r\n\t\t\targs: rest,\r\n\t\t\tresolve: resolve\r\n\t\t});\r\n\t\tif (registry.deferred.length == 1) {\r\n\t\t\tprocessNextDeferred();\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction processNextDeferred(): void {\r\n\tlet next = registry.deferred[0];\r\n\tif (next) {\r\n\t\tlet sprite = next.callback.call(next.scope, ...next.args);\r\n\t\tsprite.events.on(\"ready\", () => {\r\n\t\t\tnext.resolve(sprite);\r\n\t\t\tregistry.deferred.shift();\r\n\t\t\tif (options.deferredDelay) {\r\n\t\t\t\tsetTimeout(processNextDeferred, options.deferredDelay);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tprocessNextDeferred();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function useTheme(value: ITheme): void {\r\n\tif (registry.themes.indexOf(value) === -1) {\r\n\t\tregistry.themes.push(value);\r\n\t}\r\n}\r\n\r\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function unuseTheme(value: ITheme): void {\r\n\t$array.remove(registry.themes, value);\r\n}\r\n\r\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\r\nexport function unuseAllThemes(): void {\r\n\tregistry.themes = [];\r\n}\r\n\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license: string): void {\r\n\toptions.licenses.push(license);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}