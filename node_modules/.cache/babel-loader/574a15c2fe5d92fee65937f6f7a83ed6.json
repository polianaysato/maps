{"ast":null,"code":"/**\r\n * Bullet module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Bullet } from \"./Bullet\";\nimport { Circle } from \"../../core/elements/Circle\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar CircleBullet =\n/** @class */\nfunction (_super) {\n  __extends(CircleBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CircleBullet() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"CircleBullet\";\n\n    var circle = _this.createChild(Circle);\n\n    circle.shouldClone = false;\n    circle.radius = 5;\n    circle.isMeasured = false;\n    _this.circle = circle;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[CircleBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n\n\n  CircleBullet.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.circle.copyFrom(source.circle);\n  };\n\n  return CircleBullet;\n}(Bullet);\n\nexport { CircleBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;;AAMA,SAASA,MAAT,QAA0E,UAA1E;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AA4BA;;;;;;;AAOA;;;;;;;;;;;;AAWA;AAAA;AAAA;AAAkCC;AAsBjC;;;;;AAGA;AAAA,gBACCC,qBAAO,IADR;;AAGCC,SAAI,CAACC,SAAL,GAAiB,cAAjB;;AAEA,QAAIC,MAAM,GAAGF,KAAI,CAACG,WAAL,CAAiBP,MAAjB,CAAb;;AACAM,UAAM,CAACE,WAAP,GAAqB,KAArB;AACAF,UAAM,CAACG,MAAP,GAAgB,CAAhB;AACAH,UAAM,CAACI,UAAP,GAAoB,KAApB;AACAN,SAAI,CAACE,MAAL,GAAcA,MAAd;;AAEAF,SAAI,CAACO,UAAL;;;AACA;AAED;;;;;;;;AAMOC,oCAAP,UAAgBC,MAAhB,EAA4B;AAC3BV,qBAAMW,QAAN,CAAcC,IAAd,CAAc,IAAd,EAAeF,MAAf;;AACA,SAAKP,MAAL,CAAYQ,QAAZ,CAAqBD,MAAM,CAACP,MAA5B;AACA,GAHM;;AAIR;AAjDA,EAAkCP,MAAlC;;;AAmDA;;;;;;;AAMAE,QAAQ,CAACe,iBAAT,CAA2B,cAA3B,IAA6CJ,YAA7C","names":["Bullet","Circle","registry","__extends","_super","_this","className","circle","createChild","shouldClone","radius","isMeasured","applyTheme","CircleBullet","source","copyFrom","call","registeredClasses"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/elements/CircleBullet.ts"],"sourcesContent":["/**\r\n * Bullet module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet, IBulletProperties, IBulletAdapters, IBulletEvents } from \"./Bullet\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Bullet]]\r\n */\r\nexport interface ICircleBulletProperties extends IBulletProperties { }\r\n\r\n/**\r\n * Defines events for [[Bullet]]\r\n */\r\nexport interface ICircleBulletEvents extends IBulletEvents { }\r\n\r\n/**\r\n * Defines adapters\r\n * Includes both the [[Adapter]] definitions and properties\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICircleBulletAdapters extends IBulletAdapters, ICircleBulletProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nexport class CircleBullet extends Bullet {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICircleBulletProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICircleBulletAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICircleBulletEvents;\r\n\r\n\t/**\r\n\t * A label (textual) element for the bullet.\r\n\t */\r\n\tpublic circle: Circle;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"CircleBullet\";\r\n\r\n\t\tlet circle = this.createChild(Circle);\r\n\t\tcircle.shouldClone = false;\r\n\t\tcircle.radius = 5;\r\n\t\tcircle.isMeasured = false;\r\n\t\tthis.circle = circle;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all proprities and related stuff from another instance of\r\n\t * [[CircleBullet]].\r\n\t *\r\n\t * @param source  Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.circle.copyFrom(source.circle);\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;\r\n"]},"metadata":{},"sourceType":"module"}