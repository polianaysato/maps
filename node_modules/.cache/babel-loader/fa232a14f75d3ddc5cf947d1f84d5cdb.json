{"ast":null,"code":"/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { BaseObjectEvents } from \"../Base\";\nimport { registry } from \"../Registry\";\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nvar Validatable =\n/** @class */\nfunction (_super) {\n  __extends(Validatable, _super);\n\n  function Validatable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * Is invalid and should be revalidated?\r\n     */\n\n\n    _this._validateDisposer = null;\n    return _this;\n  }\n  /**\r\n   * Invalidates the element, so that it can re-validate/redraw itself in the\r\n   * next cycle.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Validatable.prototype.invalidate = function () {\n    if (this._validateDisposer === null) {\n      this._validateDisposer = registry.events.on(\"exitframe\", this.validate, this);\n    }\n  };\n  /**\r\n   * Validates itself.\r\n   *\r\n   * Most probably the extending class will have an overriding `validate()`\r\n   * method which will do actual work, as well as call this method using\r\n   * `super.validate()`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Validatable.prototype.validate = function () {\n    if (this._validateDisposer !== null) {\n      this._validateDisposer.dispose();\n\n      this._validateDisposer = null;\n    }\n  };\n\n  Validatable.prototype.dispose = function () {\n    if (this._validateDisposer !== null) {\n      this._validateDisposer.dispose();\n\n      this._validateDisposer = null;\n    }\n\n    _super.prototype.dispose.call(this);\n  };\n\n  return Validatable;\n}(BaseObjectEvents);\n\nexport { Validatable };","map":{"version":3,"mappings":"AAAA;;;;;AAKA;;;;;;;AAMA,SAASA,gBAAT,QAAoD,SAApD;AAEA,SAASC,QAAT,QAAyB,aAAzB;AAQA;;;;;;;AAMA;AAAA;AAAA;AAAiCC;;AAAjC;AAAA;AAEC;;;;;AAGQC,8BAAsC,IAAtC;;AAsCR;AApCA;;;;;;;;AAMOC,qCAAP;AACC,QAAI,KAAKC,iBAAL,KAA2B,IAA/B,EAAqC;AACpC,WAAKA,iBAAL,GAAyBJ,QAAQ,CAACK,MAAT,CAAgBC,EAAhB,CAAmB,WAAnB,EAAgC,KAAKC,QAArC,EAA+C,IAA/C,CAAzB;AACA;AACD,GAJM;AAMP;;;;;;;;;;;AASOJ,mCAAP;AACC,QAAI,KAAKC,iBAAL,KAA2B,IAA/B,EAAqC;AACpC,WAAKA,iBAAL,CAAuBI,OAAvB;;AACA,WAAKJ,iBAAL,GAAyB,IAAzB;AACA;AACD,GALM;;AAOAD,kCAAP;AACC,QAAI,KAAKC,iBAAL,KAA2B,IAA/B,EAAqC;AACpC,WAAKA,iBAAL,CAAuBI,OAAvB;;AACA,WAAKJ,iBAAL,GAAyB,IAAzB;AACA;;AAEDK,qBAAMD,OAAN,CAAaE,IAAb,CAAa,IAAb;AACA,GAPM;;AAQR;AA3CA,EAAiCX,gBAAjC","names":["BaseObjectEvents","registry","__extends","_this","Validatable","_validateDisposer","events","on","validate","dispose","_super","call"],"sourceRoot":"","sources":["../../../../../src/.internal/core/utils/Validatable.ts"],"sourcesContent":["/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents, IBaseObjectEvents } from \"../Base\";\r\nimport { IDisposer } from \"../utils/Disposer\";\r\nimport { registry } from \"../Registry\";\r\n\r\n/**\r\n * Events.\r\n */\r\nexport interface IValidatableEvents extends IBaseObjectEvents { }\r\n\r\n\r\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport class Validatable extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Is invalid and should be revalidated?\r\n\t */\r\n\tprivate _validateDisposer: IDisposer | null = null;\r\n\r\n\t/**\r\n\t * Invalidates the element, so that it can re-validate/redraw itself in the\r\n\t * next cycle.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic invalidate(): void {\r\n\t\tif (this._validateDisposer === null) {\r\n\t\t\tthis._validateDisposer = registry.events.on(\"exitframe\", this.validate, this);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validates itself.\r\n\t *\r\n\t * Most probably the extending class will have an overriding `validate()`\r\n\t * method which will do actual work, as well as call this method using\r\n\t * `super.validate()`.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tif (this._validateDisposer !== null) {\r\n\t\t\tthis._validateDisposer.dispose();\r\n\t\t\tthis._validateDisposer = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic dispose(): void {\r\n\t\tif (this._validateDisposer !== null) {\r\n\t\t\tthis._validateDisposer.dispose();\r\n\t\t\tthis._validateDisposer = null;\r\n\t\t}\r\n\r\n\t\tsuper.dispose();\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}