{"ast":null,"code":"/**\r\n * Zoom out button functionality.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Button } from \"./Button\";\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $path from \"../rendering/Path\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IZoomOutButtonEvents} for a list of available events\r\n * @see {@link IZoomOutButtonAdapters} for a list of available Adapters\r\n */\n\nvar ZoomOutButton =\n/** @class */\nfunction (_super) {\n  __extends(ZoomOutButton, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ZoomOutButton() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"ZoomOutButton\";\n\n    _this.padding(9, 9, 9, 9); //this.dx = - 5;\n    //this.dy = 5;\n\n\n    _this.showSystemTooltip = true;\n    var interfaceColors = new InterfaceColorSet();\n    var background = _this.background;\n    background.cornerRadius(20, 20, 20, 20);\n    background.fill = interfaceColors.getFor(\"primaryButton\");\n    background.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\n    background.strokeOpacity = 0;\n    background.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\n    background.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\"); // Create an icon\n\n    var icon = new Sprite();\n    icon.element = _this.paper.add(\"path\");\n    var path = $path.moveTo({\n      x: 0,\n      y: 0\n    });\n    path += $path.lineTo({\n      x: 11,\n      y: 0\n    });\n    icon.path = path;\n    icon.pixelPerfect = true;\n    icon.padding(8, 3, 8, 3);\n    icon.stroke = interfaceColors.getFor(\"primaryButtonText\");\n    _this.icon = icon; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  ZoomOutButton.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Zoom Out\");\n    }\n  };\n\n  return ZoomOutButton;\n}(Button);\n\nexport { ZoomOutButton };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ZoomOutButton\"] = ZoomOutButton;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;;AAMA,SAASA,MAAT,QAA0E,UAA1E;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,OAAO,KAAKC,KAAZ,MAAuB,mBAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;AA4BA;;;;;;;AAOA;;;;;;;AAMA;AAAA;AAAA;AAAmCC;AAiBlC;;;;;AAGA;AAAA,gBAEC;AACAC,yBAAO,IAHR;;AAICC,SAAI,CAACC,SAAL,GAAiB,eAAjB;;AAEAD,SAAI,CAACE,OAAL,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAND,CAOC;AACA;;;AAEAF,SAAI,CAACG,iBAAL,GAAyB,IAAzB;AAEA,QAAIC,eAAe,GAAG,IAAIT,iBAAJ,EAAtB;AAEA,QAAIU,UAAU,GAAqBL,KAAI,CAACK,UAAxC;AACAA,cAAU,CAACC,YAAX,CAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC;AACAD,cAAU,CAACE,IAAX,GAAkBH,eAAe,CAACI,MAAhB,CAAuB,eAAvB,CAAlB;AACAH,cAAU,CAACI,MAAX,GAAoBL,eAAe,CAACI,MAAhB,CAAuB,qBAAvB,CAApB;AACAH,cAAU,CAACK,aAAX,GAA2B,CAA3B;AAEAL,cAAU,CAACM,MAAX,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkCC,UAAlC,CAA6CN,IAA7C,GAAoDH,eAAe,CAACI,MAAhB,CAAuB,oBAAvB,CAApD;AACAH,cAAU,CAACM,MAAX,CAAkBC,MAAlB,CAAyB,MAAzB,EAAiCC,UAAjC,CAA4CN,IAA5C,GAAmDH,eAAe,CAACI,MAAhB,CAAuB,qBAAvB,CAAnD,CArBD,CAuBC;;AACA,QAAIM,IAAI,GAAW,IAAIrB,MAAJ,EAAnB;AACAqB,QAAI,CAACC,OAAL,GAAef,KAAI,CAACgB,KAAL,CAAWC,GAAX,CAAe,MAAf,CAAf;AAEA,QAAIC,IAAI,GAAGtB,KAAK,CAACuB,MAAN,CAAa;AAAEC,OAAC,EAAE,CAAL;AAAQC,OAAC,EAAE;AAAX,KAAb,CAAX;AACAH,QAAI,IAAItB,KAAK,CAAC0B,MAAN,CAAa;AAAEF,OAAC,EAAE,EAAL;AAASC,OAAC,EAAE;AAAZ,KAAb,CAAR;AACAP,QAAI,CAACI,IAAL,GAAYA,IAAZ;AAEAJ,QAAI,CAACS,YAAL,GAAoB,IAApB;AACAT,QAAI,CAACZ,OAAL,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;AACAY,QAAI,CAACL,MAAL,GAAcL,eAAe,CAACI,MAAhB,CAAuB,mBAAvB,CAAd;AACAR,SAAI,CAACc,IAAL,GAAYA,IAAZ,CAlCD,CAoCC;;AACAd,SAAI,CAACwB,UAAL;;;AACA;AAED;;;;;;AAIUC,kDAAV;AACC1B,qBAAM2B,qBAAN,CAA2BC,IAA3B,CAA2B,IAA3B;;AACA,QAAI,CAAC9B,KAAK,CAAC+B,QAAN,CAAe,KAAKC,WAApB,CAAL,EAAuC;AACtC,WAAKA,WAAL,GAAmB,KAAKC,QAAL,CAAcC,SAAd,CAAwB,UAAxB,CAAnB;AACA;AACD,GALS;;AAOX;AAvEA,EAAmCvC,MAAnC;;;AAyEA;;;;;;;AAMAE,QAAQ,CAACsC,iBAAT,CAA2B,eAA3B,IAA8CP,aAA9C","names":["Button","Sprite","registry","InterfaceColorSet","$path","$type","__extends","_super","_this","className","padding","showSystemTooltip","interfaceColors","background","cornerRadius","fill","getFor","stroke","strokeOpacity","states","getKey","properties","icon","element","paper","add","path","moveTo","x","y","lineTo","pixelPerfect","applyTheme","ZoomOutButton","applyInternalDefaults","call","hasValue","readerTitle","language","translate","registeredClasses"],"sourceRoot":"","sources":["../../../../../src/.internal/core/elements/ZoomOutButton.ts"],"sourcesContent":["/**\r\n * Zoom out button functionality.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button, IButtonProperties, IButtonAdapters, IButtonEvents } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { RoundedRectangle } from \"./RoundedRectangle\";\r\nimport { registry } from \"../Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ZoomOutButton]].\r\n */\r\nexport interface IZoomOutButtonProperties extends IButtonProperties { }\r\n\r\n/**\r\n * Defines events for [[ZoomOutButton]].\r\n */\r\nexport interface IZoomOutButtonEvents extends IButtonEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ZoomOutButton]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IZoomOutButtonAdapters extends IButtonAdapters, IZoomOutButtonProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a zoom out button.\r\n *\r\n * @see {@link IZoomOutButtonEvents} for a list of available events\r\n * @see {@link IZoomOutButtonAdapters} for a list of available Adapters\r\n */\r\nexport class ZoomOutButton extends Button {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IZoomOutButtonProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IZoomOutButtonAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IZoomOutButtonEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ZoomOutButton\";\r\n\r\n\t\tthis.padding(9, 9, 9, 9);\r\n\t\t//this.dx = - 5;\r\n\t\t//this.dy = 5;\r\n\r\n\t\tthis.showSystemTooltip = true;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tlet background: RoundedRectangle = this.background;\r\n\t\tbackground.cornerRadius(20, 20, 20, 20);\r\n\t\tbackground.fill = interfaceColors.getFor(\"primaryButton\");\r\n\t\tbackground.stroke = interfaceColors.getFor(\"primaryButtonStroke\");\r\n\t\tbackground.strokeOpacity = 0;\r\n\r\n\t\tbackground.states.getKey(\"hover\").properties.fill = interfaceColors.getFor(\"primaryButtonHover\");\r\n\t\tbackground.states.getKey(\"down\").properties.fill = interfaceColors.getFor(\"primaryButtonActive\");\r\n\r\n\t\t// Create an icon\r\n\t\tlet icon: Sprite = new Sprite();\r\n\t\ticon.element = this.paper.add(\"path\");\r\n\r\n\t\tlet path = $path.moveTo({ x: 0, y: 0 });\r\n\t\tpath += $path.lineTo({ x: 11, y: 0 });\r\n\t\ticon.path = path;\r\n\r\n\t\ticon.pixelPerfect = true;\r\n\t\ticon.padding(8, 3, 8, 3);\r\n\t\ticon.stroke = interfaceColors.getFor(\"primaryButtonText\");\r\n\t\tthis.icon = icon;\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Zoom Out\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ZoomOutButton\"] = ZoomOutButton;\r\n"]},"metadata":{},"sourceType":"module"}