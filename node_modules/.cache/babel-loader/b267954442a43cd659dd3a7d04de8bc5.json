{"ast":null,"code":"/**\r\n * Candlestick Series module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\nimport { visualProperties } from \"../../core/Sprite\";\nimport { Candlestick } from \"../elements/Candlestick\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport * as $object from \"../../core/utils/Object\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[CandlestickSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar CandlestickSeriesDataItem =\n/** @class */\nfunction (_super) {\n  __extends(CandlestickSeriesDataItem, _super);\n  /**\r\n   * Defines a type of [[Component]] this data item is used for\r\n   * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n   */\n  //public _component!: CandlestickSeries;\n\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CandlestickSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.values.lowValueX = {};\n    _this.values.lowValueY = {};\n    _this.values.highValueX = {};\n    _this.values.highValueY = {};\n    _this.className = \"CandlestickSeriesDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"lowValueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.lowValueX.value;\n    },\n\n    /**\r\n     * Low value for horizontal axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"lowValueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"lowValueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.lowValueY.value;\n    },\n\n    /**\r\n     * Low value for vertical axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"lowValueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"highValueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.highValueX.value;\n    },\n\n    /**\r\n     * High value for horizontal axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"highValueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"highValueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.highValueY.value;\n    },\n\n    /**\r\n     * High value for vertical axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"highValueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"closeValueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.valueX.value;\n    },\n\n    /**\r\n     * Close value for horizontal axis.\r\n     *\r\n     * This is an alias for `valueX` added for convenience only.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"valueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeriesDataItem.prototype, \"closeValueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function get() {\n      return this.values.valueY.value;\n    },\n\n    /**\r\n     * Close value for vertical axis.\r\n     *\r\n     * This is an alias for `valueX` added for convenience only.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function set(value) {\n      this.setValue(\"valueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CandlestickSeriesDataItem;\n}(ColumnSeriesDataItem);\n\nexport { CandlestickSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link ICandlestickSeriesEvents} for a list of available Events\r\n * @see {@link ICandlestickSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\n\nvar CandlestickSeries =\n/** @class */\nfunction (_super) {\n  __extends(CandlestickSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CandlestickSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"CandlestickSeries\";\n    _this.groupFields.lowValueX = \"low\";\n    _this.groupFields.lowValueY = \"low\";\n    _this.groupFields.highValueX = \"high\";\n    _this.groupFields.highValueY = \"high\";\n    _this.strokeOpacity = 1;\n    var interfaceColors = new InterfaceColorSet();\n    var positiveColor = interfaceColors.getFor(\"positive\");\n    var negativeColor = interfaceColors.getFor(\"negative\");\n    _this.dropFromOpenState.properties.fill = negativeColor;\n    _this.dropFromOpenState.properties.stroke = negativeColor;\n    _this.riseFromOpenState.properties.fill = positiveColor;\n    _this.riseFromOpenState.properties.stroke = positiveColor;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  CandlestickSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Candlestick Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n\n\n  CandlestickSeries.prototype.createDataItem = function () {\n    return new CandlestickSeriesDataItem();\n  };\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  CandlestickSeries.prototype.validateDataElementReal = function (dataItem) {\n    _super.prototype.validateDataElementReal.call(this, dataItem);\n\n    this.validateCandlestick(dataItem);\n  };\n\n  CandlestickSeries.prototype.validateCandlestick = function (dataItem) {\n    var column = dataItem.column;\n\n    if (column) {\n      var lowLine_1 = column.lowLine;\n      var highLine_1 = column.highLine;\n\n      if (this.baseAxis == this.xAxis) {\n        var x = column.pixelWidth / 2;\n        lowLine_1.x = x;\n        highLine_1.x = x;\n        var open_1 = dataItem.getWorkingValue(this.yOpenField);\n        var close_1 = dataItem.getWorkingValue(this.yField);\n        var yOpen = this.yAxis.getY(dataItem, this.yOpenField);\n        var yClose = this.yAxis.getY(dataItem, this.yField);\n        var yLow = this.yAxis.getY(dataItem, this.yLowField);\n        var yHigh = this.yAxis.getY(dataItem, this.yHighField);\n        var pixelY = column.pixelY;\n        lowLine_1.y1 = yLow - pixelY;\n        highLine_1.y1 = yHigh - pixelY;\n\n        if (open_1 < close_1) {\n          lowLine_1.y2 = yOpen - pixelY;\n          highLine_1.y2 = yClose - pixelY;\n        } else {\n          lowLine_1.y2 = yClose - pixelY;\n          highLine_1.y2 = yOpen - pixelY;\n        }\n      }\n\n      if (this.baseAxis == this.yAxis) {\n        var y = column.pixelHeight / 2;\n        lowLine_1.y = y;\n        highLine_1.y = y;\n        var open_2 = dataItem.getWorkingValue(this.xOpenField);\n        var close_2 = dataItem.getWorkingValue(this.xField);\n        var xOpen = this.xAxis.getX(dataItem, this.xOpenField);\n        var xClose = this.xAxis.getX(dataItem, this.xField);\n        var xLow = this.xAxis.getX(dataItem, this.xLowField);\n        var xHigh = this.xAxis.getX(dataItem, this.xHighField);\n        var pixelX = column.pixelX;\n        lowLine_1.x1 = xLow - pixelX;\n        highLine_1.x1 = xHigh - pixelX;\n\n        if (open_2 < close_2) {\n          lowLine_1.x2 = xOpen - pixelX;\n          highLine_1.x2 = xClose - pixelX;\n        } else {\n          lowLine_1.x2 = xClose - pixelX;\n          highLine_1.x2 = xOpen - pixelX;\n        }\n      }\n\n      $iter.each(this.axisRanges.iterator(), function (axisRange) {\n        // LOW LINE\n        var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\n\n        if (rangeColumn) {\n          var rangeLowLine = rangeColumn.lowLine;\n          rangeLowLine.x = lowLine_1.x;\n          rangeLowLine.y = lowLine_1.y;\n          rangeLowLine.x1 = lowLine_1.x1;\n          rangeLowLine.x2 = lowLine_1.x2;\n          rangeLowLine.y1 = lowLine_1.y1;\n          rangeLowLine.y2 = lowLine_1.y2; // HIGH LINE\n\n          var rangehighLine = rangeColumn.highLine;\n          rangehighLine.x = highLine_1.x;\n          rangehighLine.y = highLine_1.y;\n          rangehighLine.x1 = highLine_1.x1;\n          rangehighLine.x2 = highLine_1.x2;\n          rangehighLine.y1 = highLine_1.y1;\n          rangehighLine.y2 = highLine_1.y2;\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(CandlestickSeries.prototype, \"xLowField\", {\n    /**\r\n     * A data field to look for \"low\" value for horizontal axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Field name\r\n     */\n    get: function get() {\n      return this._xLowField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeries.prototype, \"yLowField\", {\n    /**\r\n     * A data field to look for \"low\" value for vertical axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Field name\r\n     */\n    get: function get() {\n      return this._yLowField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeries.prototype, \"xHighField\", {\n    /**\r\n     * A data field to look for \"high\" value for horizontal axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Field name\r\n     */\n    get: function get() {\n      return this._xHighField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CandlestickSeries.prototype, \"yHighField\", {\n    /**\r\n     * A data field to look for \"high\" value for vertical axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Field name\r\n     */\n    get: function get() {\n      return this._yHighField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets up which data fields to use for data access.\r\n   */\n\n  CandlestickSeries.prototype.defineFields = function () {\n    _super.prototype.defineFields.call(this);\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis && yAxis) {\n      if (this.baseAxis == xAxis) {\n        var yAxisFieldName = $utils.capitalize(yAxis.axisFieldName);\n        this._yLowField = \"low\" + yAxisFieldName + \"Y\";\n        this._yHighField = \"high\" + yAxisFieldName + \"Y\";\n      }\n\n      if (this.baseAxis == yAxis) {\n        var xAxisFieldName = $utils.capitalize(xAxis.axisFieldName);\n        this._xLowField = \"low\" + xAxisFieldName + \"X\";\n        this._xHighField = \"high\" + xAxisFieldName + \"X\";\n      }\n\n      this.addValueField(xAxis, this._xValueFields, this._xLowField);\n      this.addValueField(xAxis, this._xValueFields, this._xHighField);\n      this.addValueField(yAxis, this._yValueFields, this._yLowField);\n      this.addValueField(yAxis, this._yValueFields, this._yHighField);\n    }\n  };\n  /**\r\n   * Creates elements in related legend container, that mimics the look of this\r\n   * Series.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param marker  Legend item container\r\n   */\n\n\n  CandlestickSeries.prototype.createLegendMarker = function (marker) {\n    var w = marker.pixelWidth;\n    var h = marker.pixelHeight;\n    marker.removeChildren();\n    var column = marker.createChild(Candlestick);\n    column.shouldClone = false;\n    column.copyFrom(this.columns.template);\n    var cw;\n    var ch;\n    var highLine = column.lowLine;\n    var lowLine = column.highLine;\n\n    if (this.baseAxis == this.yAxis) {\n      cw = w / 3;\n      ch = h;\n      highLine.y = h / 2;\n      lowLine.y = h / 2;\n      highLine.x2 = w / 3;\n      lowLine.x2 = w / 3;\n      lowLine.x = w / 3 * 2;\n      column.column.x = w / 3;\n    } else {\n      cw = w;\n      ch = h / 3;\n      highLine.x = w / 2;\n      lowLine.x = w / 2;\n      highLine.y2 = h / 3;\n      lowLine.y2 = h / 3;\n      lowLine.y = h / 3 * 2;\n      column.column.y = h / 3;\n    }\n\n    column.width = cw;\n    column.height = ch;\n    $object.copyProperties(this, marker, visualProperties);\n    $object.copyProperties(this.columns.template, column, visualProperties);\n    column.stroke = this.riseFromOpenState.properties.stroke;\n    column.fill = column.stroke;\n    var legendDataItem = marker.dataItem;\n    legendDataItem.color = column.fill;\n    legendDataItem.colorOrig = column.fill;\n  };\n  /**\r\n   * Returns an element to use for Candlestick\r\n   * @ignore\r\n   * @return Element.\r\n   */\n\n\n  CandlestickSeries.prototype.createColumnTemplate = function () {\n    return new Candlestick();\n  };\n\n  return CandlestickSeries;\n}(ColumnSeries);\n\nexport { CandlestickSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"CandlestickSeries\"] = CandlestickSeries;\nregistry.registeredClasses[\"CandlestickSeriesDataItem\"] = CandlestickSeriesDataItem;","map":{"version":3,"mappings":"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","names":["ColumnSeries","ColumnSeriesDataItem","visualProperties","Candlestick","registry","InterfaceColorSet","$utils","$object","$iter","$type","__extends","_super","_this","values","lowValueX","lowValueY","highValueX","highValueY","className","applyTheme","Object","CandlestickSeriesDataItem","value","setValue","valueX","valueY","groupFields","strokeOpacity","interfaceColors","positiveColor","getFor","negativeColor","dropFromOpenState","properties","fill","stroke","riseFromOpenState","CandlestickSeries","applyInternalDefaults","call","hasValue","readerTitle","language","translate","dataItem","validateDataElementReal","validateCandlestick","column","lowLine_1","lowLine","highLine_1","highLine","baseAxis","xAxis","x","pixelWidth","open_1","getWorkingValue","yOpenField","close_1","yField","yOpen","yAxis","getY","yClose","yLow","yLowField","yHigh","yHighField","pixelY","y1","y2","y","pixelHeight","open_2","xOpenField","close_2","xField","xOpen","getX","xClose","xLow","xLowField","xHigh","xHighField","pixelX","x1","x2","each","axisRanges","iterator","axisRange","rangeColumn","rangesColumns","getKey","uid","rangeLowLine","rangehighLine","_xLowField","_yLowField","_xHighField","_yHighField","defineFields","yAxisFieldName","capitalize","axisFieldName","xAxisFieldName","addValueField","_xValueFields","_yValueFields","marker","w","h","removeChildren","createChild","shouldClone","copyFrom","columns","template","cw","ch","width","height","copyProperties","legendDataItem","color","colorOrig","registeredClasses"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/series/CandlestickSeries.ts"],"sourcesContent":["/**\r\n * Candlestick Series module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem, IColumnSeriesDataFields, IColumnSeriesProperties, IColumnSeriesAdapters, IColumnSeriesEvents } from \"./ColumnSeries\";\r\nimport { GroupField, IXYSeriesGroupFields } from \"./XYSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { Candlestick } from \"../elements/Candlestick\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\nimport { CalculatedValue } from \"../../core/Component\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[CandlestickSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class CandlestickSeriesDataItem extends ColumnSeriesDataItem {\r\n\r\n\t/**\r\n\t * A sprite used to draw the column.\r\n\t */\r\n\tpublic _column: Candlestick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for\r\n\t * @todo Disabled to work around TS bug (see if we can re-enable it again)\r\n\t */\r\n\t//public _component!: CandlestickSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.values.lowValueX = {};\r\n\t\tthis.values.lowValueY = {};\r\n\t\tthis.values.highValueX = {};\r\n\t\tthis.values.highValueY = {};\r\n\r\n\t\tthis.className = \"CandlestickSeriesDataItem\";\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Low value for horizontal axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set lowValueX(value: number) {\r\n\t\tthis.setValue(\"lowValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get lowValueX(): number {\r\n\t\treturn this.values.lowValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Low value for vertical axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set lowValueY(value: number) {\r\n\t\tthis.setValue(\"lowValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get lowValueY(): number {\r\n\t\treturn this.values.lowValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * High value for horizontal axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set highValueX(value: number) {\r\n\t\tthis.setValue(\"highValueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get highValueX(): number {\r\n\t\treturn this.values.highValueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * High value for vertical axis.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set highValueY(value: number) {\r\n\t\tthis.setValue(\"highValueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get highValueY(): number {\r\n\t\treturn this.values.highValueY.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Close value for horizontal axis.\r\n\t *\r\n\t * This is an alias for `valueX` added for convenience only.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set closeValueX(value: number) {\r\n\t\tthis.setValue(\"valueX\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get closeValueX(): number {\r\n\t\treturn this.values.valueX.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Close value for vertical axis.\r\n\t *\r\n\t * This is an alias for `valueX` added for convenience only.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set closeValueY(value: number) {\r\n\t\tthis.setValue(\"valueY\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get closeValueY(): number {\r\n\t\treturn this.values.valueY.value;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesDataFields extends IColumnSeriesDataFields {\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for horizontal axis.\r\n\t */\r\n\tlowValueX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for vertical axis.\r\n\t */\r\n\tlowValueY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high numeric value for horizontal axis.\r\n\t */\r\n\thighValueX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low numeric value for vertical axis.\r\n\t */\r\n\thighValueY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low date for horizontal axis.\r\n\t */\r\n\tlowDateX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds low date for vertical axis.\r\n\t */\r\n\tlowDateY?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high date for horizontal axis.\r\n\t */\r\n\thighDateX?: string;\r\n\r\n\t/**\r\n\t * Field name in data which holds high date for vertical axis.\r\n\t */\r\n\thighDateY?: string;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis high value for\r\n\t * the item.\r\n\t */\r\n\thighValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a horizontal axis low value for\r\n\t * the item.\r\n\t */\r\n\tlowValueXShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis low value for\r\n\t * the item.\r\n\t */\r\n\tlowValueYShow?: CalculatedValue;\r\n\r\n\t/**\r\n\t * Which calculated field to use to use as a vertical axis high value for\r\n\t * the item.\r\n\t */\r\n\thighValueYShow?: CalculatedValue;\r\n\r\n}\r\n\r\n/**\r\n * Defines data fields that can be calculated for aggregate values.\r\n * \r\n * @since 4.7.0\r\n */\r\nexport interface ICandlestickSeriesGroupFields extends IXYSeriesGroupFields {\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `lowValueX` data field.\r\n\t *\r\n\t * @default \"low\"\r\n\t */\r\n\tlowValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `lowValueY` data field.\r\n\t *\r\n\t * @default \"low\"\r\n\t */\r\n\tlowValueY?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `highValueX` data field.\r\n\t *\r\n\t * @default \"high\"\r\n\t */\r\n\thighValueX?: GroupField;\r\n\r\n\t/**\r\n\t * Indicates how to calculate aggregate value for `highValueY` data field.\r\n\t *\r\n\t * @default \"high\"\r\n\t */\r\n\thighValueY?: GroupField;\r\n\r\n}\r\n\r\n/**\r\n * Defines properties for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesProperties extends IColumnSeriesProperties { }\r\n\r\n/**\r\n * Defines events for [[CandlestickSeries]].\r\n */\r\nexport interface ICandlestickSeriesEvents extends IColumnSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CandlestickSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICandlestickSeriesAdapters extends IColumnSeriesAdapters, ICandlestickSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a candlestick graph.\r\n *\r\n * @see {@link ICandlestickSeriesEvents} for a list of available Events\r\n * @see {@link ICandlestickSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nexport class CandlestickSeries extends ColumnSeries {\r\n\r\n\t/**\r\n\t * Defines type of the group fields.\r\n\t * \r\n\t * @ignore\r\n\t * @since 4.7.0\r\n\t */\r\n\tpublic _groupFields: ICandlestickSeriesGroupFields;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: CandlestickSeriesDataItem;\r\n\r\n\t/**\r\n\t * Sets type of the column.\r\n\t */\r\n\tpublic _column: Candlestick;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: ICandlestickSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICandlestickSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICandlestickSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICandlestickSeriesEvents;\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for horizontal axis.\r\n\t */\r\n\tprotected _xLowField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for vertical axis.\r\n\t */\r\n\tprotected _yLowField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for horizontal axis.\r\n\t */\r\n\tprotected _xHighField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for vertical axis.\r\n\t */\r\n\tprotected _yHighField: $type.Keyof<this[\"_dataFields\"]>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CandlestickSeries\";\r\n\r\n\t\tthis.groupFields.lowValueX = \"low\";\r\n\t\tthis.groupFields.lowValueY = \"low\";\r\n\r\n\t\tthis.groupFields.highValueX = \"high\";\r\n\t\tthis.groupFields.highValueY = \"high\";\r\n\r\n\t\tthis.strokeOpacity = 1;\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tlet positiveColor = interfaceColors.getFor(\"positive\");\r\n\t\tlet negativeColor = interfaceColors.getFor(\"negative\");\r\n\r\n\t\tthis.dropFromOpenState.properties.fill = negativeColor;\r\n\t\tthis.dropFromOpenState.properties.stroke = negativeColor;\r\n\r\n\t\tthis.riseFromOpenState.properties.fill = positiveColor;\r\n\t\tthis.riseFromOpenState.properties.stroke = positiveColor;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Candlestick Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new CandlestickSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElementReal(dataItem: this[\"_dataItem\"]): void {\r\n\t\tsuper.validateDataElementReal(dataItem);\r\n\t\tthis.validateCandlestick(dataItem);\r\n\t}\r\n\r\n\tprotected validateCandlestick(dataItem: this[\"dataItem\"]) {\r\n\t\tlet column: Candlestick = dataItem.column;\r\n\t\tif (column) {\r\n\t\t\tlet lowLine = column.lowLine;\r\n\t\t\tlet highLine = column.highLine;\r\n\r\n\t\t\tif (this.baseAxis == this.xAxis) {\r\n\t\t\t\tlet x: number = column.pixelWidth / 2;\r\n\r\n\t\t\t\tlowLine.x = x;\r\n\t\t\t\thighLine.x = x;\r\n\r\n\t\t\t\tlet open = dataItem.getWorkingValue(this.yOpenField);\r\n\t\t\t\tlet close = dataItem.getWorkingValue(this.yField);\r\n\r\n\t\t\t\tlet yOpen = this.yAxis.getY(dataItem, this.yOpenField);\r\n\t\t\t\tlet yClose = this.yAxis.getY(dataItem, this.yField);\r\n\t\t\t\tlet yLow = this.yAxis.getY(dataItem, this.yLowField);\r\n\t\t\t\tlet yHigh = this.yAxis.getY(dataItem, this.yHighField);\r\n\r\n\t\t\t\tlet pixelY = column.pixelY;\r\n\r\n\t\t\t\tlowLine.y1 = yLow - pixelY;\r\n\t\t\t\thighLine.y1 = yHigh - pixelY;\r\n\r\n\t\t\t\tif (open < close) {\r\n\t\t\t\t\tlowLine.y2 = yOpen - pixelY;\r\n\t\t\t\t\thighLine.y2 = yClose - pixelY;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlowLine.y2 = yClose - pixelY;\r\n\t\t\t\t\thighLine.y2 = yOpen - pixelY;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\t\tlet y: number = column.pixelHeight / 2;\r\n\r\n\t\t\t\tlowLine.y = y;\r\n\t\t\t\thighLine.y = y;\r\n\r\n\t\t\t\tlet open = dataItem.getWorkingValue(this.xOpenField);\r\n\t\t\t\tlet close = dataItem.getWorkingValue(this.xField);\r\n\r\n\t\t\t\tlet xOpen = this.xAxis.getX(dataItem, this.xOpenField);\r\n\t\t\t\tlet xClose = this.xAxis.getX(dataItem, this.xField);\r\n\t\t\t\tlet xLow = this.xAxis.getX(dataItem, this.xLowField);\r\n\t\t\t\tlet xHigh = this.xAxis.getX(dataItem, this.xHighField);\r\n\r\n\t\t\t\tlet pixelX = column.pixelX;\r\n\r\n\t\t\t\tlowLine.x1 = xLow - pixelX;\r\n\t\t\t\thighLine.x1 = xHigh - pixelX;\r\n\r\n\t\t\t\tif (open < close) {\r\n\t\t\t\t\tlowLine.x2 = xOpen - pixelX;\r\n\t\t\t\t\thighLine.x2 = xClose - pixelX;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlowLine.x2 = xClose - pixelX;\r\n\t\t\t\t\thighLine.x2 = xOpen - pixelX;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t$iter.each(this.axisRanges.iterator(), (axisRange) => {\r\n\t\t\t\t// LOW LINE\r\n\t\t\t\tlet rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n\t\t\t\tif (rangeColumn) {\r\n\t\t\t\t\tlet rangeLowLine = rangeColumn.lowLine;\r\n\t\t\t\t\trangeLowLine.x = lowLine.x;\r\n\t\t\t\t\trangeLowLine.y = lowLine.y;\r\n\t\t\t\t\trangeLowLine.x1 = lowLine.x1;\r\n\t\t\t\t\trangeLowLine.x2 = lowLine.x2;\r\n\t\t\t\t\trangeLowLine.y1 = lowLine.y1;\r\n\t\t\t\t\trangeLowLine.y2 = lowLine.y2;\r\n\r\n\t\t\t\t\t// HIGH LINE\r\n\t\t\t\t\tlet rangehighLine = rangeColumn.highLine;\r\n\t\t\t\t\trangehighLine.x = highLine.x;\r\n\t\t\t\t\trangehighLine.y = highLine.y;\r\n\t\t\t\t\trangehighLine.x1 = highLine.x1;\r\n\t\t\t\t\trangehighLine.x2 = highLine.x2;\r\n\t\t\t\t\trangehighLine.y1 = highLine.y1;\r\n\t\t\t\t\trangehighLine.y2 = highLine.y2;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for horizontal axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get xLowField(): string {\r\n\t\treturn this._xLowField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"low\" value for vertical axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get yLowField(): string {\r\n\t\treturn this._yLowField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for horizontal axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get xHighField(): string {\r\n\t\treturn this._xHighField;\r\n\t}\r\n\r\n\t/**\r\n\t * A data field to look for \"high\" value for vertical axis.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Field name\r\n\t */\r\n\tpublic get yHighField(): string {\r\n\t\treturn this._yHighField;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets up which data fields to use for data access.\r\n\t */\r\n\tprotected defineFields() {\r\n\t\tsuper.defineFields();\r\n\r\n\t\tlet xAxis = this.xAxis;\r\n\t\tlet yAxis = this.yAxis;\r\n\t\tif (xAxis && yAxis) {\r\n\t\t\tif (this.baseAxis == xAxis) {\r\n\t\t\t\tlet yAxisFieldName: string = $utils.capitalize(yAxis.axisFieldName);\r\n\t\t\t\tthis._yLowField = <$type.Keyof<this[\"_dataFields\"]>>(\"low\" + yAxisFieldName + \"Y\");\r\n\t\t\t\tthis._yHighField = <$type.Keyof<this[\"_dataFields\"]>>(\"high\" + yAxisFieldName + \"Y\");\r\n\t\t\t}\r\n\r\n\t\t\tif (this.baseAxis == yAxis) {\r\n\t\t\t\tlet xAxisFieldName: string = $utils.capitalize(xAxis.axisFieldName);\r\n\t\t\t\tthis._xLowField = <$type.Keyof<this[\"_dataFields\"]>>(\"low\" + xAxisFieldName + \"X\");\r\n\t\t\t\tthis._xHighField = <$type.Keyof<this[\"_dataFields\"]>>(\"high\" + xAxisFieldName + \"X\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xLowField);\r\n\t\t\tthis.addValueField(xAxis, <any>this._xValueFields, <any>this._xHighField);\r\n\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yLowField);\r\n\t\t\tthis.addValueField(yAxis, <any>this._yValueFields, <any>this._yHighField);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Creates elements in related legend container, that mimics the look of this\r\n\t * Series.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Legend item container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container): void {\r\n\r\n\t\tlet w: number = marker.pixelWidth;\r\n\t\tlet h: number = marker.pixelHeight;\r\n\r\n\t\tmarker.removeChildren();\r\n\r\n\t\tlet column: Candlestick = marker.createChild(Candlestick);\r\n\t\tcolumn.shouldClone = false;\r\n\t\tcolumn.copyFrom(<any>this.columns.template);\r\n\r\n\t\tlet cw: number;\r\n\t\tlet ch: number;\r\n\r\n\t\tlet highLine: Line = column.lowLine;\r\n\t\tlet lowLine: Line = column.highLine;\r\n\r\n\t\tif (this.baseAxis == this.yAxis) {\r\n\t\t\tcw = w / 3;\r\n\t\t\tch = h;\r\n\r\n\t\t\thighLine.y = h / 2;\r\n\t\t\tlowLine.y = h / 2;\r\n\r\n\t\t\thighLine.x2 = w / 3;\r\n\t\t\tlowLine.x2 = w / 3;\r\n\t\t\tlowLine.x = w / 3 * 2;\r\n\t\t\tcolumn.column.x = w / 3;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcw = w;\r\n\t\t\tch = h / 3;\r\n\t\t\thighLine.x = w / 2;\r\n\t\t\tlowLine.x = w / 2;\r\n\r\n\t\t\thighLine.y2 = h / 3;\r\n\t\t\tlowLine.y2 = h / 3;\r\n\t\t\tlowLine.y = h / 3 * 2;\r\n\t\t\tcolumn.column.y = h / 3;\r\n\t\t}\r\n\t\tcolumn.width = cw;\r\n\t\tcolumn.height = ch;\r\n\r\n\t\t$object.copyProperties(this, marker, visualProperties);\r\n\t\t$object.copyProperties(this.columns.template, column, visualProperties);\r\n\r\n\t\tcolumn.stroke = this.riseFromOpenState.properties.stroke;\r\n\t\tcolumn.fill = column.stroke;\r\n\r\n\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\tlegendDataItem.color = column.fill;\r\n\t\tlegendDataItem.colorOrig = column.fill;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an element to use for Candlestick\r\n\t * @ignore\r\n\t * @return Element.\r\n\t */\r\n\tprotected createColumnTemplate(): this[\"_column\"] {\r\n\t\treturn new Candlestick();\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CandlestickSeries\"] = CandlestickSeries;\r\nregistry.registeredClasses[\"CandlestickSeriesDataItem\"] = CandlestickSeriesDataItem;\r\n"]},"metadata":{},"sourceType":"module"}