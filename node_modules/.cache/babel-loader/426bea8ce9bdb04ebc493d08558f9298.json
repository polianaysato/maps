{"ast":null,"code":"/**\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Sprite } from \"../../core/Sprite\";\nimport { registry } from \"../../core/Registry\";\nimport { color } from \"../../core/utils/Color\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\n\nvar AxisLine =\n/** @class */\nfunction (_super) {\n  __extends(AxisLine, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function AxisLine() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"AxisLine\";\n    _this.element = _this.paper.add(\"path\");\n    var interfaceColors = new InterfaceColorSet();\n    _this.stroke = interfaceColors.getFor(\"grid\");\n    _this.strokeOpacity = 0.15;\n    _this.pixelPerfect = true;\n    _this.fill = color();\n\n    _this.applyTheme();\n\n    _this.interactionsEnabled = false;\n    return _this; //this.element.moveTo({ x: 0, y: 0 });\n  }\n\n  return AxisLine;\n}(Sprite);\n\nexport { AxisLine };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;","map":{"version":3,"mappings":"AAAA;;;AAGA;;;;;;;AAMA,SAASA,MAAT,QAA0E,mBAA1E;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AA4BA;;;;;;;AAOA;;;;;;;AAMA;AAAA;AAAA;AAA8BC;AAiB7B;;;;;AAGA;AAAA,gBACCC,qBAAO,IADR;;AAECC,SAAI,CAACC,SAAL,GAAiB,UAAjB;AAEAD,SAAI,CAACE,OAAL,GAAeF,KAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,MAAf,CAAf;AAEA,QAAIC,eAAe,GAAG,IAAIR,iBAAJ,EAAtB;AACAG,SAAI,CAACM,MAAL,GAAcD,eAAe,CAACE,MAAhB,CAAuB,MAAvB,CAAd;AACAP,SAAI,CAACQ,aAAL,GAAqB,IAArB;AACAR,SAAI,CAACS,YAAL,GAAoB,IAApB;AACAT,SAAI,CAACU,IAAL,GAAYd,KAAK,EAAjB;;AACAI,SAAI,CAACW,UAAL;;AAEAX,SAAI,CAACY,mBAAL,GAA2B,KAA3B;iBAbD,CAeC;AACA;;AAEF;AAtCA,EAA8BlB,MAA9B;;;AAwCA;;;;;;;AAMAC,QAAQ,CAACkB,iBAAT,CAA2B,UAA3B,IAAyCC,QAAzC","names":["Sprite","registry","color","InterfaceColorSet","__extends","_super","_this","className","element","paper","add","interfaceColors","stroke","getFor","strokeOpacity","pixelPerfect","fill","applyTheme","interactionsEnabled","registeredClasses","AxisLine"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/axes/AxisLine.ts"],"sourcesContent":["/**\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLine]].\r\n */\r\nexport interface IAxisLineProperties extends ISpriteProperties { }\r\n\r\n/**\r\n * Defines events for [[AxisLine]].\r\n */\r\nexport interface IAxisLineEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLine]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLineAdapters extends ISpriteAdapters, IAxisLineProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Used to draw Axis line.\r\n *\r\n * @see {@link IAxisLineEvents} for a list of available events\r\n * @see {@link IAxisLineAdapters} for a list of available Adapters\r\n */\r\nexport class AxisLine extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLineProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLineAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLineEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLine\";\r\n\r\n\t\tthis.element = this.paper.add(\"path\");\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.strokeOpacity = 0.15;\r\n\t\tthis.pixelPerfect = true;\r\n\t\tthis.fill = color();\r\n\t\tthis.applyTheme();\r\n\r\n\t\tthis.interactionsEnabled = false;\r\n\r\n\t\t//this.element.moveTo({ x: 0, y: 0 });\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLine\"] = AxisLine;\r\n"]},"metadata":{},"sourceType":"module"}