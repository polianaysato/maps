{"ast":null,"code":"/**\r\n * Slider is a scrollbar with just one selection grip.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Scrollbar } from \"../../core/elements/Scrollbar\";\nimport { registry } from \"../Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a slider - a version of scrollbar with just one grip.\r\n *\r\n * @see {@link ISliderEvents} for a list of available events\r\n * @see {@link ISliderAdapters} for a list of available Adapters\r\n */\n\nvar Slider =\n/** @class */\nfunction (_super) {\n  __extends(Slider, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Slider() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Slider\";\n    _this.thumb.opacity = 0;\n    _this.thumb.interactionsEnabled = false;\n    _this.endGrip.opacity = 0;\n    _this.endGrip.interactionsEnabled = false;\n\n    _this.startGrip.events.on(\"drag\", function () {\n      _this.endGrip.x = _this.startGrip.x;\n      _this.endGrip.y = _this.startGrip.y;\n    });\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(Slider.prototype, \"__end\", {\n    /**\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._start;\n    },\n    set: function (value) {},\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slider.prototype, \"end\", {\n    /**\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._start;\n    },\n\n    /**\r\n     * Relative position (0-1) of the end grip.\r\n     *\r\n     * @param position  Position (0-1)\r\n     */\n    set: function (position) {},\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slider.prototype, \"start\", {\n    /**\r\n     * @return Position (0-1)\r\n     */\n    get: function () {\n      return this._start;\n    },\n\n    /**\r\n     * Relative position (0-1) of the start grip.\r\n     *\r\n     * @param position  Position (0-1)\r\n     */\n    set: function (position) {\n      if (!this._isBusy) {\n        this.__start = position;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Slider;\n}(Scrollbar);\n\nexport { Slider };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Slider\"] = Slider;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;;AAMA,SAASA,SAAT,QAAsF,+BAAtF;AACA,SAASC,QAAT,QAAyB,aAAzB;AA4BA;;;;;;;AAOA;;;;;;;AAMA;AAAA;AAAA;AAA4BC;AAiB3B;;;;;AAGA;AAAA,gBACCC,qBAAO,IADR;;AAECC,SAAI,CAACC,SAAL,GAAiB,QAAjB;AAEAD,SAAI,CAACE,KAAL,CAAWC,OAAX,GAAqB,CAArB;AACAH,SAAI,CAACE,KAAL,CAAWE,mBAAX,GAAiC,KAAjC;AACAJ,SAAI,CAACK,OAAL,CAAaF,OAAb,GAAuB,CAAvB;AACAH,SAAI,CAACK,OAAL,CAAaD,mBAAb,GAAmC,KAAnC;;AAEAJ,SAAI,CAACM,SAAL,CAAeC,MAAf,CAAsBC,EAAtB,CAAyB,MAAzB,EAAiC;AAChCR,WAAI,CAACK,OAAL,CAAaI,CAAb,GAAiBT,KAAI,CAACM,SAAL,CAAeG,CAAhC;AACAT,WAAI,CAACK,OAAL,CAAaK,CAAb,GAAiBV,KAAI,CAACM,SAAL,CAAeI,CAAhC;AACA,KAHD;;AAKAV,SAAI,CAACW,UAAL;;;AACA;;AAMDC,wBAAcC,gBAAd,EAAc,OAAd,EAAmB;AAHnB;;;SAGA;AACC,aAAO,KAAKC,MAAZ;AACA,KAFkB;SAInB,UAAoBC,KAApB,EAAiC,CAEhC,CANkB;oBAAA;;AAAA,GAAnB;AAWAH,wBAAWC,gBAAX,EAAW,KAAX,EAAc;AAHd;;;SAGA;AACC,aAAO,KAAKC,MAAZ;AACA,KAFa;;AAId;;;;;SAKA,UAAeE,QAAf,EAA+B,CAE9B,CAXa;oBAAA;;AAAA,GAAd;AAmBAJ,wBAAWC,gBAAX,EAAW,OAAX,EAAgB;AAMhB;;;SAGA;AACC,aAAO,KAAKC,MAAZ;AACA,KAXe;;AALhB;;;;;SAKA,UAAiBE,QAAjB,EAAiC;AAChC,UAAI,CAAC,KAAKC,OAAV,EAAmB;AAClB,aAAKC,OAAL,GAAeF,QAAf;AACA;AACD,KAJe;oBAAA;;AAAA,GAAhB;AAYD;AAnFA,EAA4BpB,SAA5B;;;AAqFA;;;;;;;AAMAC,QAAQ,CAACsB,iBAAT,CAA2B,QAA3B,IAAuCN,MAAvC","names":["Scrollbar","registry","__extends","_super","_this","className","thumb","opacity","interactionsEnabled","endGrip","startGrip","events","on","x","y","applyTheme","Object","Slider","_start","value","position","_isBusy","__start","registeredClasses"],"sourceRoot":"","sources":["../../../../../src/.internal/core/elements/Slider.ts"],"sourcesContent":["/**\r\n * Slider is a scrollbar with just one selection grip.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar, IScrollbarProperties, IScrollbarAdapters, IScrollbarEvents } from \"../../core/elements/Scrollbar\";\r\nimport { registry } from \"../Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[Slider]].\r\n */\r\nexport interface ISliderProperties extends IScrollbarProperties { }\r\n\r\n/**\r\n * Defines events for [[Slider]].\r\n */\r\nexport interface ISliderEvents extends IScrollbarEvents { }\r\n\r\n/**\r\n * Defines adapters for [[Slider]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ISliderAdapters extends IScrollbarAdapters, ISliderProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Creates a slider - a version of scrollbar with just one grip.\r\n *\r\n * @see {@link ISliderEvents} for a list of available events\r\n * @see {@link ISliderAdapters} for a list of available Adapters\r\n */\r\nexport class Slider extends Scrollbar {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ISliderProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ISliderAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ISliderEvents;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Slider\";\r\n\r\n\t\tthis.thumb.opacity = 0;\r\n\t\tthis.thumb.interactionsEnabled = false;\r\n\t\tthis.endGrip.opacity = 0;\r\n\t\tthis.endGrip.interactionsEnabled = false;\r\n\r\n\t\tthis.startGrip.events.on(\"drag\", () => {\r\n\t\t\tthis.endGrip.x = this.startGrip.x;\r\n\t\t\tthis.endGrip.y = this.startGrip.y;\r\n\t\t})\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tprotected get __end(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\tprotected set __end(value: number) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * @return [description]\r\n\t */\r\n\tpublic get end(): number {\r\n\t\treturn this._start;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the end grip.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t */\r\n\tpublic set end(position: number) {\r\n\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Relative position (0-1) of the start grip.\r\n\t *\r\n\t * @param position  Position (0-1)\r\n\t */\r\n\tpublic set start(position: number) {\r\n\t\tif (!this._isBusy) {\r\n\t\t\tthis.__start = position;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Position (0-1)\r\n\t */\r\n\tpublic get start(): number {\r\n\t\treturn this._start;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Slider\"] = Slider;\r\n"]},"metadata":{},"sourceType":"module"}