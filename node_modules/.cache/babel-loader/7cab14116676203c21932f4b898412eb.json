{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\polia\\\\Desktop\\\\Overlay\\\\src\\\\components\\\\Views.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    position: \"absolute\",\n    zIndex: 1000,\n    right: \"28px\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  span: {\n    display: \"block\",\n    float: \"left\",\n    height: 15,\n    width: 34,\n    textAlign: \"center\",\n    fontSize: 9,\n    fontWeight: 'bold',\n    fontFamily: 'Nunito Sans, sans-serif'\n  },\n  label: {\n    display: \"block\",\n    height: 15,\n    width: 34,\n    textAlign: \"center\",\n    fontSize: 9,\n    fontWeight: 'bold',\n    fontFamily: 'Nunito Sans, sans-serif'\n  },\n  flex: {\n    display: \"flex\",\n    margin: \"8px 0\"\n  },\n  circle: {\n    width: \"100%\",\n    height: \"15px\",\n    display: \"block\"\n  },\n  block: {\n    display: \"block\",\n    fontSize: 12,\n    fontFamily: \"SFProDisplay-Regular, Helvetica, Arial, sans-serif\",\n    color: \"#050505\"\n  },\n  circleStroke: {\n    width: \"4px\",\n    height: \"4px\",\n    display: \"block\"\n  },\n  top: {\n    top: \"28%\"\n  }\n});\n\nfunction Views(_ref) {\n  _s();\n\n  let {\n    title,\n    color,\n    poi\n  } = _ref;\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.block,\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      xs: true,\n      className: classes.flex,\n      children: color && color[0] && color.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.circle,\n            style: {\n              backgroundColor: item\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.label,\n            children: Number(poi[index]) !== 0 ? `< ${poi[index]}` : poi[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Views, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Views;\nexport default Views;\n\nvar _c;\n\n$RefreshReg$(_c, \"Views\");","map":{"version":3,"sources":["C:/Users/polia/Desktop/Overlay/src/components/Views.tsx"],"names":["React","Typography","makeStyles","Grid","useStyles","root","minWidth","position","zIndex","right","bullet","display","margin","transform","title","fontSize","pos","marginBottom","span","float","height","width","textAlign","fontWeight","fontFamily","label","flex","circle","block","color","circleStroke","top","Views","poi","classes","map","item","index","backgroundColor","Number"],"mappings":"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","sourcesContent":["import React, { ReactElement } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    position: \"absolute\",\n    zIndex: 1000,\n\n    right: \"28px\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n\n  span: {\n    display: \"block\",\n    float: \"left\",\n    height: 15,\n    width: 34,\n    textAlign: \"center\",\n    fontSize: 9,\n    fontWeight: 'bold',\n    fontFamily: 'Nunito Sans, sans-serif',\n  },\n\n  label: {\n    display: \"block\",\n    height: 15,\n    width: 34,\n    textAlign: \"center\",\n    fontSize: 9,\n    fontWeight: 'bold',\n    fontFamily: 'Nunito Sans, sans-serif',\n  },\n  flex: {\n    display: \"flex\",\n    margin: \"8px 0\",\n  },\n  circle: {\n    width: \"100%\",\n    height: \"15px\",\n    display: \"block\",\n  },\n  block: {\n    display: \"block\",\n    fontSize: 12,\n    fontFamily: \"SFProDisplay-Regular, Helvetica, Arial, sans-serif\",\n    color: \"#050505\",\n  },\n  circleStroke: {\n    width: \"4px\",\n    height: \"4px\",\n    display: \"block\",\n  },\n  top: {\n    top: \"28%\",\n  },\n});\n\ninterface Props {\n  title: string;\n  color: Array<string>;\n  poi: Array<string>;\n}\nfunction Views({ title, color, poi }: Props): ReactElement {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography className={classes.block} gutterBottom>\n        {title}\n      </Typography>\n      <Grid container xs className={classes.flex}>\n        {color &&\n          color[0] &&\n          color.map((item: string, index: number) => {\n            return (\n              <Grid item xs>\n                <Typography\n                  className={classes.circle}\n                  style={{ backgroundColor: item }}\n                ></Typography>\n                <Typography className={classes.label}>{Number(poi[index]) !== 0 ? `< ${poi[index]}` : poi[index]}</Typography>\n              </Grid>\n            );\n          })}\n      </Grid>\n    </>\n  );\n}\n\nexport default Views;\n"]},"metadata":{},"sourceType":"module"}