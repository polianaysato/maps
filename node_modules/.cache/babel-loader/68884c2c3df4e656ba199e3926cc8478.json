{"ast":null,"code":"/**\r\n * Defines Funnel Chart Series.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\nimport { FunnelTick } from \"../elements/FunnelTick\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { registry } from \"../../core/Registry\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $array from \"../../core/utils/Array\";\nimport { percent } from \"../../core/utils/Percent\";\nimport { Disposer } from \"../../core/utils/Disposer\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n//@todo: sequenced?\n\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar FunnelSeriesDataItem =\n/** @class */\nfunction (_super) {\n  __extends(FunnelSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function FunnelSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"FunnelSeriesDataItem\"; // this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\n\n    _this.events.on(\"visibilitychanged\", function () {\n      if (_this.component) {\n        _this.component.invalidateDataItems();\n      }\n    }, _this, false);\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(FunnelSeriesDataItem.prototype, \"sliceLink\", {\n    /**\r\n     * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n     *\r\n     * @readonly\r\n     * @return Slice element\r\n     */\n    get: function get() {\n      var _this = this;\n\n      if (!this._sliceLink) {\n        var sliceLink_1 = this.component.sliceLinks.create();\n        this._sliceLink = sliceLink_1;\n\n        this._disposers.push(sliceLink_1);\n\n        sliceLink_1.parent = this.component.slicesContainer;\n\n        this._disposers.push(new Disposer(function () {\n          if (_this.component) {\n            _this.component.sliceLinks.removeValue(sliceLink_1);\n          }\n        }));\n\n        this.addSprite(sliceLink_1);\n        sliceLink_1.visible = this.visible;\n      }\n\n      return this._sliceLink;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FunnelSeriesDataItem;\n}(PercentSeriesDataItem);\n\nexport { FunnelSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\n\nvar FunnelSeries =\n/** @class */\nfunction (_super) {\n  __extends(FunnelSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function FunnelSeries() {\n    var _this = _super.call(this) || this;\n\n    _this._nextY = 0;\n    _this.className = \"FunnelSeries\";\n    _this.orientation = \"vertical\";\n    _this.width = percent(100);\n    _this.height = percent(100);\n    _this.slicesContainer.width = percent(100);\n    _this.slicesContainer.height = percent(100);\n\n    _this._disposers.push(_this.slicesContainer.events.on(\"maxsizechanged\", _this.invalidateDataItems, _this, false));\n\n    _this.labelsOpposite = true;\n    _this.labelsContainer.layout = \"absolute\";\n    _this.bottomRatio = 0;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Creates a [[FunnelSlice]] element.\r\n   *\r\n   * @return Slice\r\n   */\n\n\n  FunnelSeries.prototype.createSlice = function () {\n    return new FunnelSlice();\n  };\n  /**\r\n   * Creates a [[FunnelTick]] element.\r\n   *\r\n   * @return Tick\r\n   */\n\n\n  FunnelSeries.prototype.createTick = function () {\n    return new FunnelTick();\n  };\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  FunnelSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Funnel Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n\n\n  FunnelSeries.prototype.createDataItem = function () {\n    return new FunnelSeriesDataItem();\n  };\n  /**\r\n   * Inits FunnelSlice.\r\n   *\r\n   * @param slice to init\r\n   */\n\n\n  FunnelSeries.prototype.initSlice = function (slice) {\n    slice.isMeasured = false;\n    slice.defaultState.properties.scale = 1;\n    slice.observe(\"scale\", this.handleSliceScale, this);\n    slice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\n    slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\n    var hoverState = slice.states.create(\"hover\");\n    hoverState.properties.expandDistance = 0.2;\n  };\n  /**\r\n   * [initLabel description]\r\n   *\r\n   * @todo Description\r\n   * @param label [description]\r\n   */\n\n\n  FunnelSeries.prototype.initLabel = function (label) {\n    _super.prototype.initLabel.call(this, label);\n\n    label.verticalCenter = \"middle\";\n    label.horizontalCenter = \"middle\";\n    label.isMeasured = true;\n    label.padding(5, 5, 5, 5);\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  FunnelSeries.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n\n    this._nextY = 0;\n  };\n  /**\r\n   * [validateDataElements description]\r\n   *\r\n   * @todo Description\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  FunnelSeries.prototype.validateDataElements = function () {\n    var _this = this;\n\n    var slicesContainer = this.slicesContainer;\n    var labelsContainer = this.labelsContainer;\n    var labelTemplate = this.labels.template;\n\n    if (this.alignLabels) {\n      labelTemplate.interactionsEnabled = true;\n      slicesContainer.isMeasured = true;\n      labelsContainer.isMeasured = true;\n    } else {\n      labelTemplate.interactionsEnabled = false;\n      slicesContainer.isMeasured = false;\n      labelsContainer.isMeasured = false;\n    }\n\n    var total = 0;\n    var count = 0;\n    this.dataItems.each(function (dItem) {\n      if ($type.hasValue(dItem.value)) {\n        count++;\n\n        if (dItem.value > 0) {\n          total += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\n        } else {\n          if (_this.ignoreZeroValues) {\n            count--;\n          } else {\n            if (!dItem.visible || dItem.__disabled || dItem.isHiding) {\n              count--;\n            } else {\n              total += 1;\n            }\n          }\n        }\n      }\n    });\n    this._total = 1 / count * total;\n    this._count = count;\n\n    _super.prototype.validateDataElements.call(this);\n\n    this.arrangeLabels();\n  };\n  /**\r\n   * [getNextValue description]\r\n   *\r\n   * @todo Description\r\n   * @param dataItem  [description]\r\n   * @return [description]\r\n   */\n\n\n  FunnelSeries.prototype.getNextValue = function (dataItem) {\n    var index = dataItem.index;\n    var nextValue = dataItem.getWorkingValue(\"value\");\n\n    if (index < this.dataItems.length - 1) {\n      var nextItem = this.dataItems.getIndex(index + 1);\n      nextValue = nextItem.getWorkingValue(\"value\");\n\n      if (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || nextItem.value == 0 && this.ignoreZeroValues) {\n        return this.getNextValue(nextItem);\n      }\n    }\n\n    return nextValue;\n  };\n  /**\r\n   * [formDataElement description]\r\n   *\r\n   * @todo Description\r\n   */\n\n\n  FunnelSeries.prototype.formDataElement = function () {};\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  FunnelSeries.prototype.validateDataElement = function (dataItem) {\n    var _this = this; //if ($type.hasValue(dataItem.value)) {\n    // FunnelSlice\n\n\n    var slice = dataItem.slice;\n    slice.orientation = this.orientation;\n    var sliceLink = dataItem.sliceLink;\n    sliceLink.orientation = this.orientation;\n    var tick = dataItem.tick;\n    var label = dataItem.label;\n    tick.slice = slice;\n    tick.label = label;\n\n    if ($type.hasValue(dataItem.value)) {\n      this.decorateSlice(dataItem);\n      $array.each(dataItem.sprites, function (sprite) {\n        if (dataItem.value == 0 && _this.ignoreZeroValues) {\n          sprite.__disabled = true;\n        } else {\n          sprite.__disabled = false;\n        }\n      });\n    } else {\n      $array.each(dataItem.sprites, function (sprite) {\n        sprite.__disabled = true;\n      });\n    }\n\n    if (dataItem.index == this.dataItems.length - 1) {\n      sliceLink.disabled = true;\n    } // do this at the end, otherwise bullets won't be positioned properly\n\n\n    _super.prototype.validateDataElement.call(this, dataItem);\n\n    sliceLink.fill = slice.fill; //}\n  };\n  /**\r\n   * [decorateSlice description]\r\n   *\r\n   * @todo Description\r\n   * @param dataItem [description]\r\n   */\n\n\n  FunnelSeries.prototype.decorateSlice = function (dataItem) {\n    var slice = dataItem.slice;\n    var sliceLink = dataItem.sliceLink;\n    var label = dataItem.label;\n    var tick = dataItem.tick;\n    var maxWidth = this.slicesContainer.innerWidth;\n    var maxHeight = this.slicesContainer.innerHeight;\n    var nextValue = this.getNextValue(dataItem);\n    var workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\n    var bottomRatio = this.bottomRatio;\n    var d = 1;\n\n    if (dataItem.value != 0) {\n      d = workingValue / Math.abs(dataItem.value);\n    } else {\n      if (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\n        d = 0.000001;\n      }\n    }\n\n    if (this.ignoreZeroValues && dataItem.value == 0) {\n      dataItem.__disabled = true;\n      return;\n    } else {\n      dataItem.__disabled = false;\n    }\n\n    if (this._nextY == Infinity) {\n      this._nextY = 0;\n    }\n\n    if (this.orientation == \"vertical\") {\n      var linkHeight = sliceLink.pixelHeight * d;\n      maxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\n\n      slice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\n      slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\n      sliceLink.topWidth = slice.bottomWidth;\n      sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\n      slice.y = this._nextY;\n      slice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\n      slice.x = maxWidth / 2;\n\n      if (!this.alignLabels) {\n        label.x = slice.x;\n      } else {\n        label.x = undefined;\n      }\n\n      label.y = slice.pixelY + slice.pixelHeight * tick.locationY;\n      this._nextY += slice.pixelHeight + linkHeight;\n      sliceLink.y = this._nextY - linkHeight;\n      sliceLink.x = slice.x;\n    } else {\n      var linkWidth = sliceLink.pixelWidth * d;\n      maxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\n\n      slice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\n      slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\n      sliceLink.topWidth = slice.bottomWidth;\n      sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\n      slice.x = this._nextY;\n      slice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\n      slice.y = maxHeight / 2;\n\n      if (!this.alignLabels) {\n        label.y = slice.y;\n      } else {\n        label.y = this.labelsContainer.measuredHeight;\n      }\n\n      label.x = slice.pixelX + slice.pixelWidth * tick.locationX;\n      this._nextY += slice.pixelWidth + linkWidth;\n      sliceLink.x = this._nextY - linkWidth;\n      sliceLink.y = slice.y;\n    }\n  };\n\n  FunnelSeries.prototype.getLastLabel = function (index) {\n    if (index > 0) {\n      var lastLabel = this.labels.getIndex(index);\n\n      if (lastLabel.__disabled || !lastLabel.visible) {\n        return this.getLastLabel(index - 1);\n      } else {\n        return lastLabel;\n      }\n    }\n  };\n  /**\r\n   * [arrangeLabels description]\r\n   *\r\n   * @todo Description\r\n   */\n\n\n  FunnelSeries.prototype.arrangeLabels = function () {\n    if (this.alignLabels) {\n      var count = this.labels.length;\n\n      if (count > 1) {\n        var lastLabel = this.getLastLabel(count - 1);\n\n        if (lastLabel) {\n          var lastY = lastLabel.pixelY;\n          var lastX = lastLabel.pixelX;\n\n          if (count > 1) {\n            for (var i = count - 2; i >= 0; i--) {\n              var label = this.labels.getIndex(i);\n\n              if (label.visible && !label.__disabled) {\n                if (label.invalid) {\n                  label.validate();\n                }\n\n                if (this.orientation == \"vertical\") {\n                  if (label.pixelY + label.measuredHeight > lastY) {\n                    label.y = Math.min(1000000, lastY - label.measuredHeight);\n                  }\n                } // horizontal\n                else {\n                  if (label.pixelX + label.measuredWidth > lastX) {\n                    label.x = Math.min(1000000, lastX - label.measuredWidth);\n                  }\n                }\n\n                lastY = label.pixelY;\n                lastX = label.pixelX;\n              }\n            }\n\n            lastY = 0;\n            lastX = 0;\n\n            for (var i = 0; i < count; i++) {\n              var label = this.labels.getIndex(i);\n\n              if (label.visible && !label.__disabled) {\n                if (label.invalid) {\n                  label.validate();\n                }\n\n                if (this.orientation == \"vertical\") {\n                  if (label.pixelY < lastY) {\n                    label.y = Math.min(1000000, lastY);\n                  }\n                } // horizontal\n                else {\n                  if (label.pixelX < lastX) {\n                    label.x = Math.min(1000000, lastX);\n                  }\n                }\n\n                lastY += label.measuredHeight;\n                lastX += label.measuredWidth;\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\r\n   * Positions series bullet.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param bullet  Bullet\r\n   */\n\n\n  FunnelSeries.prototype.positionBullet = function (bullet) {\n    _super.prototype.positionBullet.call(this, bullet);\n\n    var dataItem = bullet.dataItem;\n    var slice = dataItem.slice;\n    var locationX = bullet.locationX;\n\n    if (!$type.isNumber(locationX)) {\n      locationX = 0.5;\n    }\n\n    var locationY = bullet.locationY;\n\n    if (!$type.isNumber(locationY)) {\n      locationY = 1;\n    }\n\n    bullet.x = slice.pixelX + slice.measuredWidth * locationX;\n    bullet.y = slice.pixelY + slice.measuredHeight * locationY;\n  };\n\n  Object.defineProperty(FunnelSeries.prototype, \"orientation\", {\n    /**\r\n     * @return Orientation\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"orientation\");\n    },\n\n    /**\r\n     * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n     *\r\n     * @default \"vertical\"\r\n     * @param value Orientation\r\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"orientation\", value)) {\n        this.labelsOpposite = this.labelsOpposite;\n        this.invalidate();\n\n        if (value == \"vertical\") {\n          this.ticks.template.locationX = 1;\n          this.ticks.template.locationY = 0.5;\n          this.labels.template.rotation = 0;\n          this.layout = \"horizontal\";\n        } else {\n          this.ticks.template.locationX = 0.5;\n          this.ticks.template.locationY = 1;\n          this.labels.template.rotation = -90;\n          this.layout = \"vertical\";\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelSeries.prototype, \"bottomRatio\", {\n    /**\r\n     * @return {number}\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"bottomRatio\");\n    },\n\n    /**\r\n     * Indicates how slice's bottom will change in relation to slices top AND\r\n     * next slices top.\r\n     *\r\n     * Basically it's a relative value (0-1) that indicates bottom width\r\n     * position between current slice's top width and the top withd of the next\r\n     * one.\r\n     *\r\n     * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n     * slice with).\r\n     *\r\n     * `0` (default) will mean that bottom will be the same as top, resulting in\r\n     * a prefectly square slice.\r\n     *\r\n     * From the data-viz standpoint `0` is a correct setting, since area of the\r\n     * slices will depict their value correctly.\r\n     *\r\n     * `1` will mean that slice will become trapezoid with its bottom matching\r\n     * width of the next slice.\r\n     *\r\n     * `0.5` will make bottom width be in the middle of width of current slice\r\n     * and the next slice.\r\n     *\r\n     * @default 0\r\n     * @param {number}\r\n     */\n    set: function set(value) {\n      if (this.setPropertyValue(\"bottomRatio\", value)) {\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelSeries.prototype, \"sliceLinks\", {\n    /**\r\n     * A list of elements linking each actual slice.\r\n     *\r\n     * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n     * so they have all the same configuration options.\r\n     *\r\n     * You can use `template` of this link, to specify how links will look.\r\n     *\r\n     * ```TypeScript\r\n     * series.sliceLinks.template.fillOpacity = 0.5;\r\n     * ```\r\n     * ```JavaScript\r\n     * series.sliceLinks.template.fillOpacity = 0.5;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     \"type\": \"FunnelSeries\",\r\n     *      // ...\r\n     *      \"sliceLinks\": {\r\n     *        \"fillOpacity\": 0.5\r\n     *      }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @return Funnel links\r\n     */\n    get: function get() {\n      if (!this._sliceLinks) {\n        var sliceLink = new FunnelSlice();\n        sliceLink.applyOnClones = true;\n        sliceLink.fillOpacity = 0.5;\n        sliceLink.expandDistance = -0.3;\n        sliceLink.hiddenState.properties.opacity = 0;\n\n        this._disposers.push(sliceLink);\n\n        this._sliceLinks = new ListTemplate(sliceLink);\n\n        this._disposers.push(new ListDisposer(this._sliceLinks));\n      }\n\n      return this._sliceLinks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param duration  Duration of reveal animation (ms)\r\n   * @return Animation\r\n   */\n\n  FunnelSeries.prototype.show = function (duration) {\n    var _this = this;\n\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var interpolationDuration = this.defaultState.transitionDuration;\n\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n\n    var delay = 0;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n\n      if (_this.sequencedInterpolation) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n\n      dataItem.show(interpolationDuration, delay, [\"value\"]);\n    });\n\n    var animation = _super.prototype.show.call(this, duration);\n\n    return animation;\n  };\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param duration  Duration of hiding animation (ms)\r\n   * @return Animation\r\n   */\n\n\n  FunnelSeries.prototype.hide = function (duration) {\n    var _this = this;\n\n    var fields = [\"value\"];\n    var value = 0;\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var delay = 0;\n    var interpolationDuration = this.hiddenState.transitionDuration;\n\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n\n      if (_this.sequencedInterpolation) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n\n      dataItem.hide(interpolationDuration, delay, value, fields);\n    });\n\n    var animation = _super.prototype.hide.call(this, duration);\n\n    if (animation && !animation.isFinished()) {\n      animation.delay(delay);\n    }\n\n    return animation;\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  FunnelSeries.prototype.setAlignLabels = function (value) {\n    _super.prototype.setAlignLabels.call(this, value);\n\n    this.ticks.template.disabled = !value;\n    var labelsContainer = this.labelsContainer;\n\n    if (labelsContainer) {\n      // do not align\n      if (!value) {\n        labelsContainer.width = percent(100);\n        labelsContainer.height = percent(100);\n      } //align\n      else {\n        labelsContainer.height = undefined;\n        labelsContainer.width = undefined;\n        labelsContainer.margin(10, 10, 10, 10);\n      }\n    }\n\n    this.labelsOpposite = this.labelsOpposite;\n  };\n\n  Object.defineProperty(FunnelSeries.prototype, \"labelsOpposite\", {\n    /**\r\n     * @return Labels on opposite side?\r\n     */\n    get: function get() {\n      return this.getPropertyValue(\"labelsOpposite\");\n    },\n\n    /**\r\n     * Put labels on the oppsite side of the series?\r\n     *\r\n     * This setting is only used if `alignLabels = true`.\r\n     *\r\n     * If set to `true` (default) labels will be drawn to the right (on vertical\r\n     * series), or to the bottom (on horizontal series).\r\n     *\r\n     * If set to `false`, labels will be positioned to the left or top\r\n     * respectively.\r\n     *\r\n     * @default true\r\n     * @since 4.1.13\r\n     * @param  value  Labels on opposite side?\r\n     */\n    set: function set(value) {\n      this.setPropertyValue(\"labelsOpposite\", value);\n      var labelTemplate = this.labels.template;\n      var labelAlign = \"none\";\n      var labelValign = \"none\";\n\n      if (!this.alignLabels) {\n        if (this.orientation == \"vertical\") {\n          labelAlign = \"center\";\n        } else {\n          labelValign = \"middle\";\n        }\n      } else {\n        // opposite (left/bottom)\n        if (value) {\n          this.labelsContainer.toFront(); // left\n\n          if (this.orientation == \"vertical\") {\n            this.ticks.template.locationX = 1;\n            labelTemplate.horizontalCenter = \"left\";\n            labelAlign = \"right\";\n          } // bottom\n          else {\n            this.ticks.template.locationY = 1;\n            labelTemplate.horizontalCenter = \"right\";\n            labelValign = \"bottom\";\n          }\n        } // non oposite (right/top)\n        else {\n          this.labelsContainer.toBack(); // right\n\n          if (this.orientation == \"vertical\") {\n            this.ticks.template.locationX = 0;\n            labelAlign = \"left\";\n          } // top\n          else {\n            labelValign = \"top\";\n            this.ticks.template.locationY = 0;\n          }\n        }\n      }\n\n      labelTemplate.align = labelAlign;\n      labelTemplate.valign = labelValign;\n      this.validateLayout();\n      this.ticks.each(function (tick) {\n        tick.invalidate();\n      });\n      this.invalidateDataItems();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FunnelSeries;\n}(PercentSeries);\n\nexport { FunnelSeries };\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;","map":{"version":3,"mappings":"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","names":["PercentSeries","PercentSeriesDataItem","FunnelSlice","FunnelTick","ListTemplate","ListDisposer","registry","$math","$iter","$type","$array","percent","Disposer","options","__extends","_super","_this","className","events","on","component","invalidateDataItems","applyTheme","Object","FunnelSeriesDataItem","_sliceLink","sliceLink_1","sliceLinks","create","_disposers","push","parent","slicesContainer","removeValue","addSprite","visible","orientation","width","height","labelsOpposite","labelsContainer","layout","bottomRatio","FunnelSeries","applyInternalDefaults","call","hasValue","readerTitle","language","translate","slice","isMeasured","defaultState","properties","scale","observe","handleSliceScale","handleSliceMove","tooltipText","hoverState","states","expandDistance","label","initLabel","verticalCenter","horizontalCenter","padding","validate","_nextY","labelTemplate","labels","template","alignLabels","interactionsEnabled","total","count","dataItems","each","dItem","value","Math","abs","getWorkingValue","ignoreZeroValues","__disabled","isHiding","_total","_count","validateDataElements","arrangeLabels","dataItem","index","nextValue","length","nextItem","getIndex","getNextValue","sliceLink","tick","decorateSlice","sprites","sprite","disabled","validateDataElement","fill","maxWidth","innerWidth","maxHeight","innerHeight","workingValue","d","Infinity","linkHeight","pixelHeight","topWidth","values","high","bottomWidth","y","min","max","x","undefined","pixelY","locationY","linkWidth","pixelWidth","measuredHeight","pixelX","locationX","lastLabel","getLastLabel","lastY","lastX","i","invalid","measuredWidth","bullet","positionBullet","isNumber","getPropertyValue","setPropertyValue","invalidate","ticks","rotation","_sliceLinks","applyOnClones","fillOpacity","hiddenState","opacity","duration","startIndex","endIndex","interpolationDuration","transitionDuration","animationsEnabled","delay","indexed","iterator","a","sequencedInterpolation","sequencedInterpolationDelay","show","animation","fields","hide","isFinished","setAlignLabels","margin","labelAlign","labelValign","toFront","toBack","align","valign","validateLayout","registeredClasses"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/series/FunnelSeries.ts"],"sourcesContent":["/**\r\n * Defines Funnel Chart Series.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { IPercentSeriesAdapters, IPercentSeriesDataFields, IPercentSeriesEvents, IPercentSeriesProperties, PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { FunnelTick } from \"../elements/FunnelTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { Bullet } from \"../elements/Bullet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { SlicedChart } from \"../types/SlicedChart\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { Orientation } from \"../../core/defs/Orientation\";\r\nimport { Align } from \"../../core/defs/Align\";\r\nimport { VerticalAlign } from \"../../core/defs/VerticalAlign\";\r\nimport { options } from \"../../core/Options\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n//@todo: sequenced?\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nexport class FunnelSeriesDataItem extends PercentSeriesDataItem {\r\n\r\n\t/**\r\n\t * A type of slice used for this series.\r\n\t */\r\n\tpublic _slice: FunnelSlice;\r\n\r\n\t/**\r\n\t * A reference to a label element.\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to a tick element.\r\n\t */\r\n\tpublic _tick: FunnelTick;\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: FunnelSeries;\r\n\r\n\t/**\r\n\t * Defines a type of elements linking slices.\r\n\t */\r\n\tpublic _sliceLink: FunnelSlice;\r\n\r\n\t/**\r\n\t * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n\t *\r\n\t * @readonly\r\n\t * @return Slice element\r\n\t */\r\n\tpublic get sliceLink(): this[\"_sliceLink\"] {\r\n\t\tif (!this._sliceLink) {\r\n\t\t\tlet sliceLink = this.component.sliceLinks.create();\r\n\t\t\tthis._sliceLink = sliceLink;\r\n\t\t\tthis._disposers.push(sliceLink);\r\n\t\t\tsliceLink.parent = this.component.slicesContainer;\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tif (this.component) {\r\n\t\t\t\t\tthis.component.sliceLinks.removeValue(sliceLink);\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(sliceLink);\r\n\t\t\tsliceLink.visible = this.visible;\r\n\t\t}\r\n\t\treturn this._sliceLink;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"FunnelSeriesDataItem\";\r\n\t\t// this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\r\n\t\tthis.events.on(\"visibilitychanged\", () => {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tthis.component.invalidateDataItems();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesDataFields extends IPercentSeriesDataFields { }\r\n\r\n/**\r\n * Defines properties for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesProperties extends IPercentSeriesProperties {\r\n\r\n\t/**\r\n\t * Relative width of the slice bottom. See description of `bottomRatio`\r\n\t * property for full description.\r\n\t *\r\n\t * @default 0\r\n\t */\r\n\tbottomRatio?: number;\r\n\r\n\t/**\r\n\t * Orientation of series\r\n\t *\r\n\t * @default \"vertical\"\r\n\t */\r\n\torientation?: Orientation;\r\n\r\n\t/**\r\n\t * Put labels on the oppsite side of the series?\r\n\t *\r\n\t * @since 4.1.13\r\n\t */\r\n\tlabelsOpposite?: boolean;\r\n}\r\n\r\n/**\r\n * Defines events for [[FunnelSeries]].\r\n */\r\nexport interface IFunnelSeriesEvents extends IPercentSeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[FunnelSeries]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IFunnelSeriesAdapters extends IPercentSeriesAdapters, IFunnelSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nexport class FunnelSeries extends PercentSeries {\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _slice: FunnelSlice;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _tick: FunnelTick;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _label: Label;\r\n\r\n\t/**\r\n\t * A reference to chart this series is for.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic _chart: SlicedChart;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IFunnelSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IFunnelSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IFunnelSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IFunnelSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: FunnelSeriesDataItem;\r\n\r\n\r\n\tprotected _nextY: number = 0;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t */\r\n\tprotected _sliceLinks: ListTemplate<this[\"_slice\"]>;\r\n\r\n\t/**\r\n\t * Holds sum of values for all slices\r\n\t */\r\n\tprotected _total: number;\r\n\r\n\t/**\r\n\t * Holds number of slices.\r\n\t */\r\n\tprotected _count: number;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.className = \"FunnelSeries\";\r\n\t\tthis.orientation = \"vertical\";\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.slicesContainer.width = percent(100);\r\n\t\tthis.slicesContainer.height = percent(100);\r\n\r\n\t\tthis._disposers.push(this.slicesContainer.events.on(\"maxsizechanged\", this.invalidateDataItems, this, false));\r\n\r\n\t\tthis.labelsOpposite = true;\r\n\r\n\t\tthis.labelsContainer.layout = \"absolute\";\r\n\r\n\t\tthis.bottomRatio = 0;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a [[FunnelSlice]] element.\r\n\t *\r\n\t * @return Slice\r\n\t */\r\n\tprotected createSlice(): this[\"_slice\"] {\r\n\t\treturn new FunnelSlice();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a [[FunnelTick]] element.\r\n\t *\r\n\t * @return Tick\r\n\t */\r\n\tprotected createTick(): this[\"_tick\"] {\r\n\t\treturn new FunnelTick();\r\n\t}\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\t\tsuper.applyInternalDefaults();\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Funnel Series\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new FunnelSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Inits FunnelSlice.\r\n\t *\r\n\t * @param slice to init\r\n\t */\r\n\tprotected initSlice(slice: this[\"_slice\"]) {\r\n\t\tslice.isMeasured = false;\r\n\t\tslice.defaultState.properties.scale = 1;\r\n\t\tslice.observe(\"scale\", this.handleSliceScale, this);\r\n\t\tslice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\r\n\t\tslice.tooltipText = \"{category}: {value.percent.formatNumber('#.#')}% ({value.value})\";\r\n\r\n\t\tlet hoverState = slice.states.create(\"hover\");\r\n\t\thoverState.properties.expandDistance = 0.2;\r\n\t}\r\n\r\n\t/**\r\n\t * [initLabel description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param label [description]\r\n\t */\r\n\tprotected initLabel(label: this[\"_label\"]) {\r\n\t\tsuper.initLabel(label);\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.isMeasured = true;\r\n\t\tlabel.padding(5, 5, 5, 5);\r\n\t}\r\n\r\n\t/**\r\n\t * (Re)validates the whole series, effectively causing it to redraw.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate(): void {\r\n\t\tsuper.validate();\r\n\t\tthis._nextY = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * [validateDataElements description]\r\n\t *\r\n\t * @todo Description\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataElements() {\r\n\r\n\t\tlet slicesContainer = this.slicesContainer;\r\n\t\tlet labelsContainer = this.labelsContainer;\r\n\t\tlet labelTemplate = this.labels.template;\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tlabelTemplate.interactionsEnabled = true;\r\n\t\t\tslicesContainer.isMeasured = true;\r\n\t\t\tlabelsContainer.isMeasured = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabelTemplate.interactionsEnabled = false;\r\n\t\t\tslicesContainer.isMeasured = false;\r\n\t\t\tlabelsContainer.isMeasured = false;\r\n\t\t}\r\n\r\n\t\tlet total = 0;\r\n\t\tlet count = 0;\r\n\t\tthis.dataItems.each((dItem) => {\r\n\t\t\tif ($type.hasValue(dItem.value)) {\r\n\t\t\t\tcount++;\r\n\t\t\t\tif (dItem.value > 0) {\r\n\t\t\t\t\ttotal += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.ignoreZeroValues) {\r\n\t\t\t\t\t\tcount--;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (!dItem.visible || dItem.__disabled || dItem.isHiding) {\r\n\t\t\t\t\t\t\tcount--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttotal += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis._total = 1 / count * total;\r\n\t\tthis._count = count;\r\n\r\n\t\tsuper.validateDataElements();\r\n\r\n\t\tthis.arrangeLabels();\r\n\t}\r\n\r\n\t/**\r\n\t * [getNextValue description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem  [description]\r\n\t * @return [description]\r\n\t */\r\n\tprotected getNextValue(dataItem: FunnelSeriesDataItem): number {\r\n\t\tlet index = dataItem.index;\r\n\t\tlet nextValue: number = dataItem.getWorkingValue(\"value\");\r\n\t\tif (index < this.dataItems.length - 1) {\r\n\t\t\tlet nextItem = this.dataItems.getIndex(index + 1);\r\n\t\t\tnextValue = nextItem.getWorkingValue(\"value\");\r\n\r\n\t\t\tif (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || (nextItem.value == 0 && this.ignoreZeroValues)) {\r\n\t\t\t\treturn this.getNextValue(nextItem);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn nextValue;\r\n\t}\r\n\r\n\t/**\r\n\t * [formDataElement description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected formDataElement(): void {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Validates data item's element, effectively redrawing it.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic validateDataElement(dataItem: this[\"_dataItem\"]): void {\r\n\t\t//if ($type.hasValue(dataItem.value)) {\r\n\t\t// FunnelSlice\r\n\t\tlet slice = dataItem.slice;\r\n\t\tslice.orientation = this.orientation;\r\n\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tsliceLink.orientation = this.orientation;\r\n\r\n\t\tlet tick = dataItem.tick;\r\n\t\tlet label = dataItem.label;\r\n\r\n\t\ttick.slice = slice;\r\n\t\ttick.label = label;\r\n\r\n\t\tif ($type.hasValue(dataItem.value)) {\r\n\t\t\tthis.decorateSlice(dataItem);\r\n\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\tif (dataItem.value == 0 && this.ignoreZeroValues) {\r\n\t\t\t\t\tsprite.__disabled = true;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tsprite.__disabled = false;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$array.each(dataItem.sprites, (sprite) => {\r\n\t\t\t\tsprite.__disabled = true;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (dataItem.index == this.dataItems.length - 1) {\r\n\t\t\tsliceLink.disabled = true;\r\n\t\t}\r\n\r\n\t\t// do this at the end, otherwise bullets won't be positioned properly\r\n\t\tsuper.validateDataElement(dataItem);\r\n\r\n\t\tsliceLink.fill = slice.fill;\r\n\t\t//}\r\n\t}\r\n\r\n\t/**\r\n\t * [decorateSlice description]\r\n\t *\r\n\t * @todo Description\r\n\t * @param dataItem [description]\r\n\t */\r\n\tprotected decorateSlice(dataItem: this[\"_dataItem\"]): void {\r\n\t\tlet slice = dataItem.slice;\r\n\t\tlet sliceLink = dataItem.sliceLink;\r\n\t\tlet label = dataItem.label;\r\n\t\tlet tick = dataItem.tick;\r\n\r\n\t\tlet maxWidth = this.slicesContainer.innerWidth;\r\n\t\tlet maxHeight = this.slicesContainer.innerHeight;\r\n\r\n\t\tlet nextValue = this.getNextValue(dataItem);\r\n\t\tlet workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n\t\tlet bottomRatio = this.bottomRatio;\r\n\r\n\t\tlet d = 1;\r\n\t\tif (dataItem.value != 0) {\r\n\t\t\td = workingValue / Math.abs(dataItem.value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\r\n\t\t\t\td = 0.000001;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.ignoreZeroValues && dataItem.value == 0) {\r\n\t\t\tdataItem.__disabled = true;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.__disabled = false;\r\n\t\t}\r\n\r\n\t\tif (this._nextY == Infinity) {\r\n\t\t\tthis._nextY = 0;\r\n\t\t}\r\n\r\n\t\tif (this.orientation == \"vertical\") {\r\n\r\n\t\t\tlet linkHeight = sliceLink.pixelHeight * d;\r\n\r\n\t\t\tmaxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\r\n\r\n\t\t\tslice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\r\n\t\t\tslice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\r\n\r\n\t\t\tslice.y = this._nextY;\r\n\t\t\tslice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\r\n\r\n\t\t\tslice.x = maxWidth / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.x = slice.x;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.x = undefined;\r\n\t\t\t}\r\n\t\t\tlabel.y = slice.pixelY + slice.pixelHeight * tick.locationY;\r\n\r\n\t\t\tthis._nextY += slice.pixelHeight + linkHeight;\r\n\t\t\tsliceLink.y = this._nextY - linkHeight;\r\n\t\t\tsliceLink.x = slice.x;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet linkWidth = sliceLink.pixelWidth * d;\r\n\r\n\t\t\tmaxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\r\n\r\n\t\t\tslice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\r\n\t\t\tslice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\r\n\r\n\t\t\tsliceLink.topWidth = slice.bottomWidth;\r\n\t\t\tsliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\r\n\r\n\t\t\tslice.x = this._nextY;\r\n\t\t\tslice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\r\n\t\t\tslice.y = maxHeight / 2;\r\n\r\n\t\t\tif (!this.alignLabels) {\r\n\t\t\t\tlabel.y = slice.y;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabel.y = this.labelsContainer.measuredHeight;\r\n\t\t\t}\r\n\t\t\tlabel.x = slice.pixelX + slice.pixelWidth * tick.locationX;\r\n\r\n\t\t\tthis._nextY += slice.pixelWidth + linkWidth;\r\n\t\t\tsliceLink.x = this._nextY - linkWidth;\r\n\r\n\t\t\tsliceLink.y = slice.y;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected getLastLabel(index: number): Label {\r\n\t\tif (index > 0) {\r\n\t\t\tlet lastLabel = this.labels.getIndex(index);\r\n\t\t\tif (lastLabel.__disabled || !lastLabel.visible) {\r\n\t\t\t\treturn this.getLastLabel(index - 1);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn lastLabel;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * [arrangeLabels description]\r\n\t *\r\n\t * @todo Description\r\n\t */\r\n\tprotected arrangeLabels(): void {\r\n\r\n\t\tif (this.alignLabels) {\r\n\t\t\tlet count = this.labels.length;\r\n\t\t\tif (count > 1) {\r\n\r\n\t\t\t\tlet lastLabel = this.getLastLabel(count - 1);\r\n\t\t\t\tif (lastLabel) {\r\n\r\n\t\t\t\t\tlet lastY = lastLabel.pixelY;\r\n\t\t\t\t\tlet lastX = lastLabel.pixelX;\r\n\r\n\t\t\t\t\tif (count > 1) {\r\n\t\t\t\t\t\tfor (let i = count - 2; i >= 0; i--) {\r\n\t\t\t\t\t\t\tlet label = this.labels.getIndex(i);\r\n\r\n\t\t\t\t\t\t\tif (label.visible && !label.__disabled) {\r\n\t\t\t\t\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\t\t\t\t\tlabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelY + label.measuredHeight > lastY) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.y = Math.min(1000000, lastY - label.measuredHeight);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// horizontal\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelX + label.measuredWidth > lastX) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.x = Math.min(1000000, lastX - label.measuredWidth);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlastY = label.pixelY;\r\n\t\t\t\t\t\t\t\tlastX = label.pixelX;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlastY = 0;\r\n\t\t\t\t\t\tlastX = 0;\r\n\t\t\t\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\t\t\t\tlet label = this.labels.getIndex(i);\r\n\t\t\t\t\t\t\tif (label.visible && !label.__disabled) {\r\n\t\t\t\t\t\t\t\tif (label.invalid) {\r\n\t\t\t\t\t\t\t\t\tlabel.validate();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelY < lastY) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.y = Math.min(1000000, lastY);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// horizontal\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (label.pixelX < lastX) {\r\n\t\t\t\t\t\t\t\t\t\tlabel.x = Math.min(1000000, lastX);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlastY += label.measuredHeight;\r\n\t\t\t\t\t\t\t\tlastX += label.measuredWidth;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Positions series bullet.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param bullet  Bullet\r\n\t */\r\n\tpublic positionBullet(bullet: Bullet): void {\r\n\t\tsuper.positionBullet(bullet);\r\n\r\n\t\tlet dataItem: this[\"_dataItem\"] = <this[\"_dataItem\"]>bullet.dataItem;\r\n\t\tlet slice: FunnelSlice = dataItem.slice;\r\n\r\n\t\tlet locationX = bullet.locationX;\r\n\t\tif (!$type.isNumber(locationX)) {\r\n\t\t\tlocationX = 0.5;\r\n\t\t}\r\n\t\tlet locationY = bullet.locationY;\r\n\t\tif (!$type.isNumber(locationY)) {\r\n\t\t\tlocationY = 1;\r\n\t\t}\r\n\r\n\t\tbullet.x = slice.pixelX + slice.measuredWidth * locationX;\r\n\t\tbullet.y = slice.pixelY + slice.measuredHeight * locationY;\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n\t *\r\n\t * @default \"vertical\"\r\n\t * @param value Orientation\r\n\t */\r\n\tpublic set orientation(value: Orientation) {\r\n\t\tif (this.setPropertyValue(\"orientation\", value)) {\r\n\t\t\tthis.labelsOpposite = this.labelsOpposite;\r\n\t\t\tthis.invalidate();\r\n\t\t\tif (value == \"vertical\") {\r\n\t\t\t\tthis.ticks.template.locationX = 1;\r\n\t\t\t\tthis.ticks.template.locationY = 0.5;\r\n\t\t\t\tthis.labels.template.rotation = 0;\r\n\t\t\t\tthis.layout = \"horizontal\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.ticks.template.locationX = 0.5;\r\n\t\t\t\tthis.ticks.template.locationY = 1;\r\n\t\t\t\tthis.labels.template.rotation = -90;\r\n\t\t\t\tthis.layout = \"vertical\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Orientation\r\n\t */\r\n\tpublic get orientation(): Orientation {\r\n\t\treturn this.getPropertyValue(\"orientation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates how slice's bottom will change in relation to slices top AND\r\n\t * next slices top.\r\n\t *\r\n\t * Basically it's a relative value (0-1) that indicates bottom width\r\n\t * position between current slice's top width and the top withd of the next\r\n\t * one.\r\n\t *\r\n\t * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n\t * slice with).\r\n\t *\r\n\t * `0` (default) will mean that bottom will be the same as top, resulting in\r\n\t * a prefectly square slice.\r\n\t *\r\n\t * From the data-viz standpoint `0` is a correct setting, since area of the\r\n\t * slices will depict their value correctly.\r\n\t *\r\n\t * `1` will mean that slice will become trapezoid with its bottom matching\r\n\t * width of the next slice.\r\n\t *\r\n\t * `0.5` will make bottom width be in the middle of width of current slice\r\n\t * and the next slice.\r\n\t *\r\n\t * @default 0\r\n\t * @param {number}\r\n\t */\r\n\tpublic set bottomRatio(value: number) {\r\n\t\tif (this.setPropertyValue(\"bottomRatio\", value)) {\r\n\t\t\tthis.invalidate();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return {number}\r\n\t */\r\n\tpublic get bottomRatio(): number {\r\n\t\treturn this.getPropertyValue(\"bottomRatio\");\r\n\t}\r\n\r\n\t/**\r\n\t * A list of elements linking each actual slice.\r\n\t *\r\n\t * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n\t * so they have all the same configuration options.\r\n\t *\r\n\t * You can use `template` of this link, to specify how links will look.\r\n\t *\r\n\t * ```TypeScript\r\n\t * series.sliceLinks.template.fillOpacity = 0.5;\r\n\t * ```\r\n\t * ```JavaScript\r\n\t * series.sliceLinks.template.fillOpacity = 0.5;\r\n\t * ```\r\n\t * ```JSON\r\n\t * {\r\n\t *   // ...\r\n\t *   \"series\": [{\r\n\t *     \"type\": \"FunnelSeries\",\r\n\t *      // ...\r\n\t *      \"sliceLinks\": {\r\n\t *        \"fillOpacity\": 0.5\r\n\t *      }\r\n\t *   }]\r\n\t * }\r\n\t * ```\r\n\t *\r\n\t * @return Funnel links\r\n\t */\r\n\tpublic get sliceLinks(): ListTemplate<this[\"_slice\"]> {\r\n\t\tif (!this._sliceLinks) {\r\n\t\t\tlet sliceLink = new FunnelSlice();\r\n\t\t\tsliceLink.applyOnClones = true;\r\n\t\t\tsliceLink.fillOpacity = 0.5;\r\n\t\t\tsliceLink.expandDistance = - 0.3;\r\n\t\t\tsliceLink.hiddenState.properties.opacity = 0;\r\n\r\n\t\t\tthis._disposers.push(sliceLink);\r\n\r\n\t\t\tthis._sliceLinks = new ListTemplate(sliceLink);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._sliceLinks));\r\n\t\t}\r\n\t\treturn this._sliceLinks;\r\n\t}\r\n\r\n\t/**\r\n\t * Shows hidden series.\r\n\t *\r\n\t * @param duration  Duration of reveal animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic show(duration?: number): Animation {\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet interpolationDuration = this.defaultState.transitionDuration;\r\n\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif(!options.animationsEnabled){\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\t\t\r\n\r\n\t\tlet delay: number = 0;\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\r\n\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tdataItem.show(interpolationDuration, delay, [\"value\"]);\r\n\t\t});\r\n\r\n\t\tlet animation = super.show(duration);\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * Hides series.\r\n\t *\r\n\t * @param duration  Duration of hiding animation (ms)\r\n\t * @return Animation\r\n\t */\r\n\tpublic hide(duration?: number): Animation {\r\n\t\tlet fields: string[] = [\"value\"];\r\n\t\tlet value: number = 0;\r\n\r\n\t\tlet startIndex: number = this.startIndex;\r\n\t\tlet endIndex: number = this.endIndex;\r\n\r\n\t\tlet delay: number = 0;\r\n\t\tlet interpolationDuration = this.hiddenState.transitionDuration;\r\n\t\tif ($type.isNumber(duration)) {\r\n\t\t\tinterpolationDuration = duration;\r\n\t\t}\r\n\r\n\t\tif(!options.animationsEnabled){\r\n\t\t\tinterpolationDuration = 0;\r\n\t\t}\t\t\t\t\r\n\r\n\t\t$iter.each($iter.indexed(this.dataItems.iterator()), (a) => {\r\n\t\t\tlet i = a[0];\r\n\t\t\tlet dataItem = a[1];\r\n\r\n\t\t\tif (this.sequencedInterpolation) {\r\n\t\t\t\tdelay = this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n\t\t\t}\r\n\t\t\tdataItem.hide(interpolationDuration, delay, value, fields);\r\n\t\t});\r\n\r\n\t\tlet animation: Animation = super.hide(duration);\r\n\t\tif (animation && !animation.isFinished()) {\r\n\t\t\tanimation.delay(delay);\r\n\t\t}\r\n\r\n\t\treturn animation;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setAlignLabels(value: boolean) {\r\n\t\tsuper.setAlignLabels(value);\r\n\t\tthis.ticks.template.disabled = !value;\r\n\t\tlet labelsContainer = this.labelsContainer;\r\n\t\tif (labelsContainer) {\r\n\t\t\t// do not align\r\n\t\t\tif (!value) {\r\n\t\t\t\tlabelsContainer.width = percent(100);\r\n\t\t\t\tlabelsContainer.height = percent(100);\r\n\t\t\t}\r\n\t\t\t//align\r\n\t\t\telse {\r\n\t\t\t\tlabelsContainer.height = undefined;\r\n\t\t\t\tlabelsContainer.width = undefined;\r\n\t\t\t\tlabelsContainer.margin(10, 10, 10, 10);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.labelsOpposite = this.labelsOpposite;\r\n\t}\r\n\r\n\t/**\r\n\t * Put labels on the oppsite side of the series?\r\n\t *\r\n\t * This setting is only used if `alignLabels = true`.\r\n\t *\r\n\t * If set to `true` (default) labels will be drawn to the right (on vertical\r\n\t * series), or to the bottom (on horizontal series).\r\n\t *\r\n\t * If set to `false`, labels will be positioned to the left or top\r\n\t * respectively.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.1.13\r\n\t * @param  value  Labels on opposite side?\r\n\t */\r\n\tpublic set labelsOpposite(value: boolean) {\r\n\t\tthis.setPropertyValue(\"labelsOpposite\", value)\r\n\t\tlet labelTemplate = this.labels.template;\r\n\r\n\t\tlet labelAlign: Align = \"none\";\r\n\t\tlet labelValign: VerticalAlign = \"none\";\r\n\r\n\t\tif (!this.alignLabels) {\r\n\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\tlabelAlign = \"center\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlabelValign = \"middle\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// opposite (left/bottom)\r\n\t\t\tif (value) {\r\n\t\t\t\tthis.labelsContainer.toFront();\r\n\t\t\t\t// left\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tthis.ticks.template.locationX = 1;\r\n\t\t\t\t\tlabelTemplate.horizontalCenter = \"left\";\r\n\t\t\t\t\tlabelAlign = \"right\";\r\n\t\t\t\t}\r\n\t\t\t\t// bottom\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.ticks.template.locationY = 1;\r\n\t\t\t\t\tlabelTemplate.horizontalCenter = \"right\";\r\n\t\t\t\t\tlabelValign = \"bottom\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// non oposite (right/top)\r\n\t\t\telse {\r\n\t\t\t\tthis.labelsContainer.toBack();\r\n\t\t\t\t// right\r\n\t\t\t\tif (this.orientation == \"vertical\") {\r\n\t\t\t\t\tthis.ticks.template.locationX = 0;\r\n\t\t\t\t\tlabelAlign = \"left\";\r\n\t\t\t\t}\r\n\t\t\t\t// top\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabelValign = \"top\";\r\n\t\t\t\t\tthis.ticks.template.locationY = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlabelTemplate.align = labelAlign;\r\n\t\tlabelTemplate.valign = labelValign;\r\n\r\n\t\tthis.validateLayout();\r\n\t\tthis.ticks.each((tick) => {\r\n\t\t\ttick.invalidate();\r\n\t\t})\r\n\t\tthis.invalidateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @return Labels on opposite side?\r\n\t */\r\n\tpublic get labelsOpposite(): boolean {\r\n\t\treturn this.getPropertyValue(\"labelsOpposite\");\r\n\t}\r\n}\r\n\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\r\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;\r\n"]},"metadata":{},"sourceType":"module"}