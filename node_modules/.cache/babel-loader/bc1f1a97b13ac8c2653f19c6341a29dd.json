{"ast":null,"code":"/**\r\n * Axis Label module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Label } from \"../../core/elements/Label\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar AxisLabel =\n/** @class */\nfunction (_super) {\n  __extends(AxisLabel, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function AxisLabel() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"AxisLabel\";\n    _this.isMeasured = false;\n\n    _this.padding(10, 10, 10, 10);\n\n    _this.location = 0.5; //this.nonScaling = true; // not good for perf\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(AxisLabel.prototype, \"location\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"location\");\n    },\n\n    /**\r\n     * Relative location of the label. (0-1)\r\n     *\r\n     * @param value  Location (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"location\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisLabel.prototype, \"inside\", {\n    /**\r\n     * Returns if label is set to be drawn inside axis.\r\n     *\r\n     * @return Inside?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"inside\");\n    },\n\n    /**\r\n     * Sets if label should be drawn inside axis.\r\n     *\r\n     * @param value  Inside?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"inside\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  AxisLabel.prototype.setDisabled = function (value) {\n    var changed = _super.prototype.setDisabled.call(this, value);\n\n    if (this.axis) {\n      this.axis.invalidateDataItems();\n    }\n\n    return changed;\n  };\n\n  return AxisLabel;\n}(Label);\n\nexport { AxisLabel };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;","map":{"version":3,"mappings":"AAAA;;;;AAIA;;;;;;;AAMA,SAASA,KAAT,QAAsE,2BAAtE;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AAuCA;;;;;;;AAOA;;;;;;;;AAOA;AAAA;AAAA;AAA+BC;AA2B9B;;;;;AAGA;AAAA,gBACCC,qBAAO,IADR;;AAECC,SAAI,CAACC,SAAL,GAAiB,WAAjB;AACAD,SAAI,CAACE,UAAL,GAAkB,KAAlB;;AACAF,SAAI,CAACG,OAAL,CAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;;AACAH,SAAI,CAACI,QAAL,GAAgB,GAAhB,CALD,CAMC;;AACAJ,SAAI,CAACK,UAAL;;;AACA;;AAODC,wBAAWC,mBAAX,EAAW,UAAX,EAAmB;AAInB;;;SAGA;AACC,aAAO,KAAKC,gBAAL,CAAsB,UAAtB,CAAP;AACA,KATkB;;AALnB;;;;;SAKA,UAAoBC,KAApB,EAA2C;AAC1C,WAAKC,gBAAL,CAAsB,UAAtB,EAAkCD,KAAlC,EAAyC,IAAzC;AACA,KAFkB;oBAAA;;AAAA,GAAnB;AAgBAH,wBAAWC,mBAAX,EAAW,QAAX,EAAiB;AAIjB;;;;;SAKA;AACC,aAAO,KAAKC,gBAAL,CAAsB,QAAtB,CAAP;AACA,KAXgB;;AALjB;;;;;SAKA,UAAkBC,KAAlB,EAAgC;AAC/B,WAAKC,gBAAL,CAAsB,QAAtB,EAAgCD,KAAhC,EAAuC,IAAvC;AACA,KAFgB;oBAAA;;AAAA,GAAjB;AAcA;;;;AAGUF,oCAAV,UAAsBE,KAAtB,EAAoC;AACnC,QAAIE,OAAO,GAAGZ,iBAAMa,WAAN,CAAiBC,IAAjB,CAAiB,IAAjB,EAAkBJ,KAAlB,CAAd;;AACA,QAAG,KAAKK,IAAR,EAAa;AACZ,WAAKA,IAAL,CAAUC,mBAAV;AACA;;AACD,WAAOJ,OAAP;AACA,GANS;;AAQX;AAtFA,EAA+Bf,KAA/B;;;AAwFA;;;;;;;AAMAC,QAAQ,CAACmB,iBAAT,CAA2B,WAA3B,IAA0CT,SAA1C","names":["Label","registry","__extends","_super","_this","className","isMeasured","padding","location","applyTheme","Object","AxisLabel","getPropertyValue","value","setPropertyValue","changed","setDisabled","call","axis","invalidateDataItems","registeredClasses"],"sourceRoot":"","sources":["../../../../../src/.internal/charts/axes/AxisLabel.ts"],"sourcesContent":["/**\r\n * Axis Label module\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label, ILabelProperties, ILabelAdapters, ILabelEvents } from \"../../core/elements/Label\";\r\nimport { AxisItemLocation, AxisDataItem, Axis } from \"./Axis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelProperties extends ILabelProperties {\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t */\r\n\tlocation?: number;\r\n\r\n\t/**\r\n\t * Draw the label on the inside of the Axis?\r\n\t */\r\n\tinside?: boolean;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[AxisLabel]].\r\n */\r\nexport interface IAxisLabelEvents extends ILabelEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AxisLabel]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IAxisLabelAdapters extends ILabelAdapters, IAxisLabelProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nexport class AxisLabel extends Label {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAxisLabelProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAxisLabelAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAxisLabelEvents;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: AxisDataItem;\r\n\r\n\t/**\r\n\t * A referecent to Axis element this fill is applied to.\r\n\t */\r\n\tpublic axis: Axis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"AxisLabel\";\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.padding(10, 10, 10, 10);\r\n\t\tthis.location = 0.5;\r\n\t\t//this.nonScaling = true; // not good for perf\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Relative location of the label. (0-1)\r\n\t *\r\n\t * @param value  Location (0-1)\r\n\t */\r\n\tpublic set location(value: AxisItemLocation) {\r\n\t\tthis.setPropertyValue(\"location\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Location (0-1)\r\n\t */\r\n\tpublic get location(): AxisItemLocation {\r\n\t\treturn this.getPropertyValue(\"location\");\r\n\t}\r\n\r\n\t/**\r\n\t * Sets if label should be drawn inside axis.\r\n\t *\r\n\t * @param value  Inside?\r\n\t */\r\n\tpublic set inside(value: boolean) {\r\n\t\tthis.setPropertyValue(\"inside\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if label is set to be drawn inside axis.\r\n\t *\r\n\t * @return Inside?\r\n\t */\r\n\tpublic get inside(): boolean {\r\n\t\treturn this.getPropertyValue(\"inside\");\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected setDisabled(value: boolean):boolean {\r\n\t\tlet changed = super.setDisabled(value);\r\n\t\tif(this.axis){\r\n\t\t\tthis.axis.invalidateDataItems();\r\n\t\t}\r\n\t\treturn changed;\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;\r\n"]},"metadata":{},"sourceType":"module"}