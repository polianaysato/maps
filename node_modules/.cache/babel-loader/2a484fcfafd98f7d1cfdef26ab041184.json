{"ast":null,"code":"/**\r\n * AmChartsLogo module.\r\n *\r\n * AmChartsLogo shows amCharts logo for non-commercial users of a library.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Container } from \"../Container\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { Polyspline } from \"./Polyspline\";\nimport { color } from \"../utils/Color\";\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\nimport { DesaturateFilter } from \"../rendering/filters/DesaturateFilter\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IAmChartsLogoEvents} for a list of available events\r\n * @see {@link IAmChartsLogoAdapters} for a list of available Adapters\r\n * @ignore Exclude from docs\r\n */\n\nvar AmChartsLogo =\n/** @class */\nfunction (_super) {\n  __extends(AmChartsLogo, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function AmChartsLogo() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"AmChartsLogo\";\n    _this.valign = \"bottom\";\n    var d = 0.3;\n    _this.opacity = 0.3;\n    _this.defaultState.properties.opacity = 0.4;\n    _this.url = \"https://www.amcharts.com/\";\n    _this.urlTarget = \"_blank\";\n    _this.showSystemTooltip = true;\n    _this.readerTitle = \"Chart created using amCharts library\";\n    _this.width = 220 * d;\n    _this.height = 70 * d;\n    _this.background.opacity = 0;\n    var aColor = color(\"#474758\");\n\n    if (new InterfaceColorSet().getFor(\"background\").alternative.hex == \"#ffffff\") {\n      aColor = color(\"#ffffff\");\n    }\n\n    var aGradient = new LinearGradient();\n    aGradient.addColor(aColor);\n    aGradient.addColor(aColor, 1, 0.75);\n    aGradient.addColor(color(\"#3cabff\"), 1, 0.755);\n    aGradient.rotation = -10;\n    var aStroke = aGradient;\n\n    var m = _this.createChild(Polyspline);\n\n    m.shouldClone = false;\n    m.isMeasured = false;\n    m.segments = [[{\n      x: 50 * d,\n      y: 50 * d\n    }, {\n      x: 90 * d,\n      y: 50 * d\n    }, {\n      x: 120 * d,\n      y: 20 * d\n    }, {\n      x: 135 * d,\n      y: 35 * d\n    }, {\n      x: 150 * d,\n      y: 20 * d\n    }, {\n      x: 180 * d,\n      y: 50 * d\n    }, {\n      x: 200 * d,\n      y: 50 * d\n    }]];\n    m.strokeWidth = 6 * d;\n    m.tensionX = 0.8;\n    m.tensionY = 1;\n    m.stroke = color(\"#3cabff\");\n\n    var a = _this.createChild(Polyspline);\n\n    a.shouldClone = false;\n    a.isMeasured = false;\n    a.segments = [[{\n      x: 20 * d,\n      y: 50 * d\n    }, {\n      x: 50 * d,\n      y: 50 * d\n    }, {\n      x: 90 * d,\n      y: 12 * d\n    }, {\n      x: 133 * d,\n      y: 50 * d\n    }, {\n      x: 170 * d,\n      y: 50 * d\n    }, {\n      x: 200 * d,\n      y: 50 * d\n    }]];\n    a.strokeWidth = 6 * d;\n    a.tensionX = 0.75;\n    a.tensionY = 1;\n    a.stroke = aStroke;\n\n    _this._disposers.push(a);\n\n    var desaturateFilter = new DesaturateFilter();\n\n    _this.filters.push(desaturateFilter);\n\n    var desaturateFilterHover = new DesaturateFilter();\n    desaturateFilterHover.saturation = 1;\n\n    var hoverState = _this.states.create(\"hover\");\n\n    hoverState.properties.opacity = 1;\n    hoverState.filters.push(desaturateFilterHover); // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return AmChartsLogo;\n}(Container);\n\nexport { AmChartsLogo };","map":{"version":3,"mappings":"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","names":["Container","InterfaceColorSet","Polyspline","color","LinearGradient","DesaturateFilter","__extends","_super","_this","className","valign","d","opacity","defaultState","properties","url","urlTarget","showSystemTooltip","readerTitle","width","height","background","aColor","getFor","alternative","hex","aGradient","addColor","rotation","aStroke","m","createChild","shouldClone","isMeasured","segments","x","y","strokeWidth","tensionX","tensionY","stroke","a","_disposers","push","desaturateFilter","filters","desaturateFilterHover","saturation","hoverState","states","create","applyTheme"],"sourceRoot":"","sources":["../../../../../src/.internal/core/elements/AmChartsLogo.ts"],"sourcesContent":["/**\r\n * AmChartsLogo module.\r\n *\r\n * AmChartsLogo shows amCharts logo for non-commercial users of a library.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../Container\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { Polyspline } from \"./Polyspline\";\r\nimport { color } from \"../utils/Color\";\r\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\r\nimport { DesaturateFilter } from \"../rendering/filters/DesaturateFilter\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[AmChartsLogo]].\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IAmChartsLogoProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[AmChartsLogo]].\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IAmChartsLogoEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[AmChartsLogo]].\r\n *\r\n * @see {@link Adapter}\r\n * @ignore Exclude from docs\r\n */\r\nexport interface IAmChartsLogoAdapters extends IContainerAdapters, IAmChartsLogoProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A class used to draw and display progress indicator.\r\n *\r\n * @see {@link IAmChartsLogoEvents} for a list of available events\r\n * @see {@link IAmChartsLogoAdapters} for a list of available Adapters\r\n * @ignore Exclude from docs\r\n */\r\nexport class AmChartsLogo extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IAmChartsLogoProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IAmChartsLogoAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IAmChartsLogoEvents;\r\n\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"AmChartsLogo\";\r\n\r\n\t\tthis.valign = \"bottom\";\r\n\r\n\t\tlet d = 0.3;\r\n\t\tthis.opacity = 0.3;\r\n\t\tthis.defaultState.properties.opacity = 0.4;\r\n\t\tthis.url = \"https://www.amcharts.com/\";\r\n\t\tthis.urlTarget = \"_blank\";\r\n\r\n\t\tthis.showSystemTooltip = true;\r\n\t\tthis.readerTitle = \"Chart created using amCharts library\";\r\n\t\tthis.width = 220 * d;\r\n\t\tthis.height = 70 * d;\r\n\t\tthis.background.opacity = 0;\r\n\r\n\t\tlet aColor = color(\"#474758\");\r\n\t\tif (new InterfaceColorSet().getFor(\"background\").alternative.hex == \"#ffffff\") {\r\n\t\t\taColor = color(\"#ffffff\");\r\n\t\t}\r\n\r\n\t\tlet aGradient = new LinearGradient();\r\n\r\n\t\taGradient.addColor(aColor);\r\n\t\taGradient.addColor(aColor, 1, 0.75);\r\n\t\taGradient.addColor(color(\"#3cabff\"), 1, 0.755);\r\n\t\taGradient.rotation = -10;\r\n\r\n\t\tlet aStroke = aGradient;\r\n\r\n\t\tlet m = this.createChild(Polyspline)\r\n\t\tm.shouldClone = false;\r\n\t\tm.isMeasured = false;\r\n\t\tm.segments = [[{ x: 50 * d, y: 50 * d }, { x: 90 * d, y: 50 * d }, { x: 120 * d, y: 20 * d }, { x: 135 * d, y: 35 * d }, { x: 150 * d, y: 20 * d }, { x: 180 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]]\r\n\t\tm.strokeWidth = 6 * d;\r\n\t\tm.tensionX = 0.8;\r\n\t\tm.tensionY = 1;\r\n\r\n\t\tm.stroke = color(\"#3cabff\");\r\n\r\n\t\tlet a = this.createChild(Polyspline);\r\n\t\ta.shouldClone = false;\r\n\t\ta.isMeasured = false;\r\n\t\ta.segments = [[{ x: 20 * d, y: 50 * d }, { x: 50 * d, y: 50 * d }, { x: 90 * d, y: 12 * d }, { x: 133 * d, y: 50 * d }, { x: 170 * d, y: 50 * d }, { x: 200 * d, y: 50 * d }]]\r\n\t\ta.strokeWidth = 6 * d;\r\n\t\ta.tensionX = 0.75;\r\n\t\ta.tensionY = 1;\r\n\t\ta.stroke = aStroke;\r\n\r\n\t\tthis._disposers.push(a);\r\n\r\n\t\tlet desaturateFilter = new DesaturateFilter();\r\n\t\tthis.filters.push(desaturateFilter);\r\n\r\n\t\tlet desaturateFilterHover = new DesaturateFilter();\r\n\t\tdesaturateFilterHover.saturation = 1;\r\n\r\n\t\tlet hoverState = this.states.create(\"hover\");\r\n\t\thoverState.properties.opacity = 1;\r\n\t\thoverState.filters.push(desaturateFilterHover);\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}